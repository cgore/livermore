%!
%%BoundingBox: (atend)
%%Pages: (atend)
%%DocumentFonts: (atend)
%%EndComments
%
% FrameMaker PostScript Prolog 2.0, for use with FrameMaker 2.0
% Copyright (c) 1986,87,89 by Frame Technology, Inc.  All rights reserved.
%
% Known Problems:
%	Due to bugs in Transcript, the 'PS-Adobe-' is omitted from line 1
/FMversion (2.0) def 
/FrameDict 170 dict def 
systemdict /errordict known not { /errordict 10 dict def
		errordict /rangecheck { stop } put } if
% The readline in 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	FrameDict /graymode true put
	/yscale FMLOCAL
	/xscale FMLOCAL
	/PrintInColor systemdict /colorimage known def
% Uncomment this line to force b&w on color printer
%   /PrintInColor false def
PrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR } def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc } def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray }
			{HUE SAT BRIGHT sethsbcolor } 
		  ifelse
		} def
	/mysetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray }
			{HUE SAT BRIGHT sethsbcolor } 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY } def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc } def
	/mysetgray { setgray } bind def
	/K { 
		pop
		} def
	}
ifelse
/max	{2 copy lt {exch} if pop} bind def
/min	{2 copy gt {exch} if pop} bind def
/mtx matrix defaultmatrix def
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} def
/FMDOCUMENT { 
	array /FMfonts exch def
	/#copies exch def
	0 ne dup {setmanualfeed} if
	FrameDict begin
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE {  
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne store
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{ pop pop }
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
	/fontname FMLOCAL
	/fontscale FMLOCAL
	/fontnum FMLOCAL
	/fontdict FMLOCAL
/FMDEFINEFONT {
	FrameDict begin
	/fontname exch def
	/fontscale exch def
	/fontnum exch def
	/fontdict fontname findfont fontscale scalefont def
	fontdict /Encoding get StandardEncoding eq
	{
		fontdict DiacriticEncode 
		/fontdict exch def
	} {
		fontdict NonDiacriticEncode
		/fontdict exch def
	} ifelse
	FMfonts fontnum
		fontnum fontdict definefont
	put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 mysetgray
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
/inch {72 mul} def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {lettertray} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq { pop 1 } if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
	/basefontdict FMLOCAL
	/newfontdict FMLOCAL
/DiacriticEncode {
	/basefontdict exch def
	/newfontdict basefontdict maxlength dict def
	basefontdict
	{exch dup /FID ne
		{dup /Encoding eq
			{exch pop DiacriticEncoding}
			{exch}
			ifelse
			newfontdict 3 1 roll put
			}
		{pop pop}
		ifelse
		} forall
	newfontdict
	} bind def
/NonDiacriticEncode {
	/basefontdict exch def
	/newfontdict basefontdict maxlength dict def
	basefontdict
	{exch dup /FID ne
		{exch newfontdict 3 1 roll put}
		{pop pop}
		ifelse
		} forall
	newfontdict
	} bind def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div mysetgray
	/graymode false store
	} bind def
/grayness {
	mysetgray
	graymode not {
		/graymode true store
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z { 
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne { -1 1 scale } if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes {  
	dup 
	8 eq { pop } { 1 eq { 7 add 8 idiv } { 3 add 4 idiv } ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ cf is readhexstring pop } image
	bitmapsave restore 
	grestore
	} bind def
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	/ngrayt 256 array def
	/nredt 256 array def
	/nbluet 256 array def
	/ngreent 256 array def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
/fakecolorsetup {
	/tran 256 string def
	0 1 255 { /ind exch def 
		tran ind
		red ind get 77 mul
		green ind get 151 mul
		blue ind get 28 mul
		add add 256 idiv put } for
	currenttransfer
	{ 255 mul cvi tran exch get 255.0 div }
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ cf is readhexstring pop } {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
%%EndProlog
%%BeginSetup
(2.0) FMVERSION
1 1 612 792 0 1 24 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 9 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<03060c183060c081> 8 1 setpattern } put
fillprocs 14 {<8040201008040201> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 25 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 30 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 31 {} put
%%EndSetup
0 10 /Times-Bold FMDEFINEFONT
1 12 /Times-Roman FMDEFINEFONT
2 12 /Times-Italic FMDEFINEFONT
%%Page: "30" 30
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(30) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
1 F
0 X
(W) 72 712 T
(ilson, S. W) 82.84 712 T
(. \050in preparation\051.  Action-selection and generalization over payof) 135.05 712 T
(f landscapes.) 449.91 712 T
-0.02 (W) 72 682 P
-0.02 (ilson, S. W) 82.84 682 P
-0.02 (., & Goldber) 135 682 P
-0.02 (g, D. E. \0501989\051.  A critical review of classi\336er systems.  ) 195.36 682 P
2 F
-0.02 (Pr) 465.21 682 P
-0.02 (oceedings of ) 476.76 682 P
(the Thir) 90 658 T
(d International Confer) 127.88 658 T
(ence on Genetic Algorithms ) 236.04 658 T
1 F
(\050pp. 244-255\051.  San Mateo, CA: ) 372.61 658 T
(Mor) 90 634 T
(gan Kaufmann.) 110.44 634 T
FMENDPAGE
%%EndPage: "30" 29
%%Page: "29" 29
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(29) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
1 F
0 X
(Sutton, R. S. \0501992\051.  Introduction: The challenge of reinforcement learning. ) 72 712 T
2 F
(Machine Learning, ) 441.74 712 T
(8,) 90 688 T
1 F
( 225-227.) 99 688 T
(V) 72 658 T
(alenzuela-Rend\227n, M. \0501991\051. The fuzzy classi\336er system: a classi\336er system for continuously ) 79.33 658 T
-0.32 (varying variables. ) 90 634 P
2 F
-0.32 (Pr) 178.3 634 P
-0.32 (oceedings of the Fourth International Confer) 189.85 634 P
-0.32 (ence on Genetic Algorithms) 404.7 634 P
1 F
-0.32 ( ) 537.32 634 P
(\050pp. 346-353\051.  San Mateo, CA: Mor) 90 610 T
(gan Kaufmann.) 266 610 T
-0.15 (W) 72 580 P
-0.15 (atkins, C. J. C. H. \0501989\051.  ) 82.36 580 P
2 F
-0.15 (Learning fr) 210.26 580 P
-0.15 (om Delayed Rewar) 264.65 580 P
-0.15 (ds.) 355.84 580 P
1 F
-0.15 (  Ph.D. thesis, Cambridge Universi-) 369.5 580 P
(ty) 90 556 T
(.) 98.55 556 T
(W) 72 526 T
(atkins, C. J. C. H. \0501993\051.  Q-learning.  T) 82.36 526 T
(alk presented at the workshop \322Reinforcement Learn-) 278.73 526 T
-0.33 (ing: What W) 90 502 P
-0.33 (e Know) 150.34 502 P
-0.33 (, What W) 186.86 502 P
-0.33 (e Need\323, June 30 and July 1, 1993, University of Massachusetts, ) 231.53 502 P
(Amherst.) 90 478 T
(W) 72 448 T
(idrow) 82.84 448 T
(, B., & Hof) 110.04 448 T
(f, M. \0501960\051.  Adaptive switching circuits. ) 163.8 448 T
2 F
(1960 IRE WESCON Convention ) 369.33 448 T
(Recor) 90 424 T
(d) 118.2 424 T
1 F
(, pp. 96-104.  New Y) 124.19 424 T
(ork: IRE.) 224.25 424 T
-0.24 (W) 72 394 P
-0.24 (ilson, S. W) 82.84 394 P
-0.24 (. \0501985\051.  Knowledge growth in an arti\336cial animal. ) 134.56 394 P
2 F
-0.24 (Pr) 382.86 394 P
-0.24 (oceedings of the First Interna-) 394.4 394 P
-0.15 (tional Confer) 90 370 P
-0.15 (ence on Genetic Algorithms and Their Applications ) 153.71 370 P
1 F
-0.15 (\050pp. 16-23\051.  Hillsdale, New ) 402.85 370 P
(Jersey: Lawrence Erlbaum Associates.) 90 346 T
(W) 72 316 T
(ilson, S. W) 82.84 316 T
(. \0501987a\051.  Classi\336er systems and the animat problem. ) 135.05 316 T
2 F
(Machine Learning, 2,) 396.22 316 T
1 F
( 199-) 500.15 316 T
(228.) 90 292 T
(W) 72 262 T
(ilson, S. W) 82.84 262 T
(. \0501987b\051. Hierarchical credit allocation in a classi\336er system.  ) 135.05 262 T
2 F
(Pr) 436.49 262 T
(oceedings of the ) 448.04 262 T
-0.12 (T) 90 238 P
-0.12 (enth International Joint Confer) 95.57 238 P
-0.12 (ence on Arti\336cial Intelligence ) 245.02 238 P
1 F
-0.12 (\050pp. 217-220\051.  Los Altos, CA: ) 389.79 238 P
(Mor) 90 214 T
(gan Kaufmann.) 110.44 214 T
-0.01 (W) 72 184 P
-0.01 (ilson, S. W) 82.84 184 P
-0.01 (. \0501988\051.  Bid competition and speci\336city reconsidered. ) 135.03 184 P
2 F
-0.01 (Complex Systems, 2) 402.46 184 P
1 F
-0.01 (\0506\051, 705-) 498.04 184 P
(723.) 90 160 T
(W) 72 130 T
(ilson, S. W) 82.84 130 T
(. \0501991\051.  The animat path to AI. In J.-A. Meyer & S. W) 135.05 130 T
(. W) 402.75 130 T
(ilson \050Eds.\051, ) 419.59 130 T
2 F
(Fr) 480.89 130 T
(om Ani-) 492.44 130 T
-0.4 (mals to Animats: Pr) 90 106 P
-0.4 (oceedings of the First International Confer) 184.64 106 P
-0.4 (ence on Simulation of Adaptive ) 389.09 106 P
(Behavior) 90 82 T
1 F
( \050pp.\051.  Cambridge, MA: MIT Press/Bradford Books.) 133.97 82 T
FMENDPAGE
%%EndPage: "29" 28
%%Page: "28" 28
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(28) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
1 F
0 X
(262-270\051.  Cambridge, MA: MIT Press/Bradford Books.) 90 712 T
(Littman, M. L. \0501994\051.  Memoryless policies: theoretical limitations and practical results.  In D. ) 72 682 T
-0.15 (Clif) 90 658 P
-0.15 (f, P) 108.45 658 P
-0.15 (. Husbands, J.-A. Meyer) 123.63 658 P
-0.15 (, & S. W) 239.62 658 P
-0.15 (. W) 280.38 658 P
-0.15 (ilson \050Eds.\051, ) 297.07 658 P
2 F
-0.15 (Fr) 358.08 658 P
-0.15 (om Animals to Animats 3: Pr) 369.63 658 P
-0.15 (oceed-) 508.04 658 P
(ings of the Thir) 90 634 T
(d International Confer) 163.2 634 T
(ence on Simulation of Adaptive Behavior) 271.36 634 T
1 F
(.  Cambridge, ) 467.58 634 T
(MA: MIT Press/Bradford Books.) 90 610 T
-0.29 (Mahadevan, S., & Connell, J. \0501992\051.  Automatic programming of behavior) 72 580 P
-0.29 (-based robots using re-) 431.29 580 P
(inforcement learning.  ) 90 556 T
2 F
(Arti\336cial Intelligence) 199.25 556 T
1 F
(, ) 301.52 556 T
2 F
(55) 307.51 556 T
1 F
(, 31) 319.51 556 T
(1-365.) 337.05 556 T
-0.11 (Parodi, A., & Bonelli, P) 72 526 P
-0.11 (. \0501993\051.  A new approach to fuzzy classi\336er systems. In S. Forrest, \050Ed.\051, ) 185.5 526 P
2 F
-0.04 (Pr) 90 502 P
-0.04 (oceedings of the Fifth International Confer) 101.55 502 P
-0.04 (ence on Genetic Algorithms ) 307.8 502 P
1 F
-0.04 (\050pp. 223-230\051.  San ) 444.22 502 P
(Mateo, CA: Mor) 90 478 T
(gan Kaufmann.) 170.07 478 T
(Riolo, R. L. \0501989\051.  The emer) 72 448 T
(gence of coupled sequences of classi\336ers. In J. D. Schaf) 218.36 448 T
(fer \050Ed.\051, ) 486.59 448 T
2 F
-0.26 (Pr) 90 424 P
-0.26 (oceedings of the Thir) 101.55 424 P
-0.26 (d International Confer) 201.93 424 P
-0.26 (ence on Genetic Algorithms) 309.58 424 P
1 F
-0.26 ( \050pp. 256-264\051.  San ) 442.37 424 P
(Mateo, CA: Mor) 90 400 T
(gan Kaufmann.) 170.07 400 T
-0.13 (Roberts, G. R. \0501993\051.  Dynamic planning for classi\336er systems. In S. Forrest, \050Ed.\051, ) 72 370 P
2 F
-0.13 (Pr) 477.62 370 P
-0.13 (oceedings ) 489.17 370 P
(of the Fifth International Confer) 90 346 T
(ence on Genetic Algorithms \050) 245.48 346 T
1 F
(pp. 231-237\051.  San Mateo, CA: ) 386.05 346 T
(Mor) 90 322 T
(gan Kaufmann.) 110.44 322 T
-0.4 (Schwartz, A. \0501993\051.  A reinforcement learning method for maximizing undiscounted rewards.  In ) 72 292 P
2 F
-0.02 (Machine Learning: Pr) 90 268 P
-0.02 (oceedings of the T) 197.44 268 P
-0.02 (enth International W) 283.88 268 P
-0.02 (orkshop.) 382.68 268 P
1 F
-0.02 ( San Mateo, CA: Mor-) 424.32 268 P
(gan Kaufmann.) 90 244 T
(Smith, R. E. \0501991\051.  ) 72 214 T
2 F
(Default Hierar) 174.95 214 T
(chy Formation and Memory Exploitation in Learning Classi-) 246.13 214 T
(\336er Systems) 90 190 T
1 F
(.  Ph. D. thesis, The University of Alabama, T) 146.96 190 T
(uscaloosa, AL.) 367.06 190 T
(Sutton, R. S. \0501991\051.  Reinforcement learning architectures for animats. In J.-A. Meyer & S. W) 72 160 T
(. ) 526.91 160 T
(W) 90 136 T
(ilson \050Eds.\051, ) 100.84 136 T
2 F
(Fr) 162.14 136 T
(om Animals to Animats: Pr) 173.69 136 T
(oceedings of the First International Confer) 303.84 136 T
(ence ) 510.29 136 T
(on Simulation of Adaptive Behavior) 90 112 T
1 F
( \050pp. 288-296\051.  Cambridge, MA: MIT Press/Bradford ) 261.9 112 T
(Books.) 90 88 T
FMENDPAGE
%%EndPage: "28" 27
%%Page: "27" 27
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(27) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
1 F
0 X
(Clif) 72 712 T
(f, D., & Bullock, S. \0501993\051.  Adding \322foveal vision\323 to W) 90.45 712 T
(ilson\325) 366.13 712 T
(s animat.  ) 392.79 712 T
2 F
(Adaptive Behavior) 442.09 712 T
1 F
( ) 531.7 712 T
2 F
(2) 90 688 T
1 F
(\0501\051 49-72.) 96 688 T
-0.49 (Dorigo, M. \0501993\051.  Genetic and non-genetic operators in ALECSYS.  ) 72 658 P
2 F
-0.49 (Evolutionary Computation, ) 406.71 658 P
(1) 90 634 T
1 F
(\0502\051, 151-164.) 96 634 T
(Elman, J. L. \0501990\051.  Finding structure in time.  ) 72 604 T
2 F
(Cognitive Science) 302.2 604 T
1 F
(, ) 388.47 604 T
2 F
(14) 394.47 604 T
1 F
(, 179-21) 406.46 604 T
(1.) 445.99 604 T
(Goldber) 72 574 T
(g, D. E. \0501989\051.  ) 111.09 574 T
2 F
(Genetic Algorithms in Sear) 192.03 574 T
(ch, Optimization, and Machine Learning.  ) 322.51 574 T
1 F
(Reading, MA: Addison-Wesley.) 90 550 T
(Grefenstette, J. J. \0501992\051.  The evolution of strategies for multiagent environments.  ) 72 520 T
2 F
(Adaptive Be-) 475.72 520 T
(havior) 90 496 T
(, 1) 119.98 496 T
1 F
(, 65-90.) 131.98 496 T
-0.19 (Holland, J. H. \0501976\051.  Adaptation.  In R. Rosen & F) 72 466 P
-0.19 (. M. Snell \050Eds.\051, ) 321.12 466 P
2 F
-0.19 (Pr) 405.65 466 P
-0.19 (ogr) 417.2 466 P
-0.19 (ess in theor) 433.41 466 P
-0.19 (etical biol-) 487.89 466 P
(ogy) 90 442 T
(, 4) 106.66 442 T
1 F
(.  New Y) 118.65 442 T
(ork: Plenum.) 160.75 442 T
(Holland, J. H. \0501986\051.  Escaping brittleness: the possibilities of general-purpose learning algo-) 72 412 T
(rithms applied to parallel rule-based systems.  In R. S. Michalski, J. G. Carbonell & T) 90 388 T
(. M. ) 501.19 388 T
(Mitchell \050Eds.\051, ) 90 364 T
2 F
(Machine learning, an arti\336cial intelligence appr) 168.62 364 T
(oach. V) 400.7 364 T
(olume II) 436.01 364 T
1 F
(.  Los Altos, ) 476.31 364 T
(California: Mor) 90 340 T
(gan Kaufmann.) 165.4 340 T
(Kaelbling, L. P) 72 310 T
(. \0501990\051.  ) 143.96 310 T
2 F
(Learning in Embedded Systems.) 190.93 310 T
1 F
(  Ph.D. thesis, Stanford University) 344.83 310 T
(, Stan-) 508.62 310 T
(ford, CA.  T) 90 286 T
(eleos TR-90-04.) 148.12 286 T
(Kaelbling, L. P) 72 256 T
(. \0501993\051.  Personal communication.) 143.96 256 T
(Koza, J. R. \0501992\051.  ) 72 226 T
2 F
(Genetic Pr) 168.93 226 T
(ogramming.) 220.78 226 T
1 F
( Cambridge, MA: The MIT Press/Bradford Books.) 279.08 226 T
-0.04 (Lin, L.-J. \0501993\051.  ) 72 196 P
2 F
-0.04 (Reinfor) 160.43 196 P
-0.04 (cement Learning for Robots Using Neural Networks.) 195.97 196 P
1 F
-0.04 (  Ph.D. thesis, Car-) 449.23 196 P
(negie Mellon University) 90 172 T
(, Pittsbur) 206.48 172 T
(gh, P) 249.58 172 T
(A.) 273.14 172 T
-0.18 (Littman, M. L. \0501993a\051.  An optimization-based categorization of reinforcement learning environ-) 72 142 P
(ments. In J.-A. Meyer) 90 118 T
(, H. L. Roitblat, & S. W) 194.77 118 T
(. W) 308.62 118 T
(ilson \050Eds.\051,) 325.45 118 T
2 F
( Fr) 383.76 118 T
(om Animals to Animats 2: ) 398.3 118 T
-0.1 (Pr) 90 94 P
-0.1 (oceedings of the Second International Confer) 101.55 94 P
-0.1 (ence on Simulation of Adaptive Behavior) 318.82 94 P
1 F
-0.1 ( \050pp. ) 515.21 94 P
FMENDPAGE
%%EndPage: "27" 26
3 14 /Times-Bold FMDEFINEFONT
%%Page: "26" 26
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(26) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 55 540 720 R
V
1 F
0 X
-0.26 (W) 90 712 P
-0.26 (ith respect to Holland\325) 100.84 712 P
-0.26 (s original framework, the main element greatly lost sight of in ZCS is ) 206.98 712 P
(of course the message list and the concommitent potential for multiple parallel thought lines and ) 72 688 T
-0.24 (the formation of complex mental models.  One sees in principle how these things could emer) 72 664 P
-0.24 (ge in ) 513.84 664 P
(a classi\336er system, but we don\325) 72 640 T
(t yet understand the mechanics well enough to make it happen.  ) 222.35 640 T
-0.21 (W) 72 616 P
-0.21 (e hope that further research on simpler systems like ZCS will contribute to bringing the full sys-) 82.36 616 P
(tem to maturity) 72 592 T
(.) 145.18 592 T
3 F
(Acknowledgement) 72 526.67 T
1 F
(I am grateful for extensive interactions on most of these topics, in person and by electronic ) 90 500 T
-0.28 (mail, with Lashon Booker and Rob Smith.  I also wish to thank Leslie Kaelbling and Michael Litt-) 72 476 P
-0.44 (man for helpful discussions.  Comments by three anonymous reviewers, as well as by Littman and ) 72 452 P
(Marco Dorigo, made important dif) 72 428 T
(ferences in the \336nal version.) 238 428 T
3 F
(Refer) 72 362.67 T
(ences) 105.15 362.67 T
1 F
(Barto, A. G. \0501992\051.  Reinforcement learning and adaptive critic methods. In D. A. White & D. ) 72 336 T
(Sofge \050Eds.\051, ) 90 312 T
2 F
(Handbook of Intelligent Contr) 155.95 312 T
(ol: Neural, Fuzzy and Adaptive Algorithms) 301.1 312 T
1 F
( \050pp. ) 507.65 312 T
(469-491\051.  New Y) 90 288 T
(ork: V) 176.07 288 T
(an Nostrand Reinhold.) 205.71 288 T
-0.26 (Booker) 72 258 P
-0.26 (, L. B. \0501982\051.  ) 106.83 258 P
2 F
-0.26 (Intelligent behavior as an adaptation to the task envir) 179.82 258 P
-0.26 (onment) 435.83 258 P
1 F
-0.26 (, Ph.D. thesis, ) 471.14 258 P
(The University of Michigan, Ann Arbor) 90 234 T
(, MI. ) 282.05 234 T
(Booker) 72 204 T
(, L. B. \0501989\051.  T) 106.83 204 T
(riggered rule discovery in classi\336er systems. In J. D. Schaf) 188.02 204 T
(fer \050Ed.\051, ) 469.61 204 T
2 F
(Pr) 516.22 204 T
(o-) 527.77 204 T
(ceedings of the Thir) 90 180 T
(d International Confer) 185.17 180 T
(ence on Genetic Algorithms) 293.34 180 T
1 F
( \050pp. 265-274\051.  San ) 426.91 180 T
(Mateo, CA: Mor) 90 156 T
(gan Kaufmann.) 170.07 156 T
(Booker) 72 126 T
(, L. B. \0501991\051.  Representing attribute-based concepts in a classi\336er system.  In G. J. E. ) 106.83 126 T
(Rawlins \050Ed.\051, ) 90 102 T
2 F
(Foundations of Genetic Algorithms) 162.62 102 T
1 F
( \050pp. 1) 332.2 102 T
(15-127\051. San Mateo, CA: Mor) 362.73 102 T
(gan ) 507.75 102 T
(Kaufmann.) 90 78 T
FMENDPAGE
%%EndPage: "26" 25
4 12 /Courier FMDEFINEFONT
5 10 /Times-Roman FMDEFINEFONT
%%Page: "25" 25
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(25) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
1 F
0 X
-0.19 (sions.  It is straightforward to represent a classi\336er) 72 712 P
-0.19 (\325) 313.07 712 P
-0.19 (s condition as an s-expression built from ) 316.4 712 P
4 F
-0.46 (and) 512.61 712 P
1 F
-0.19 (, ) 534.19 712 P
4 F
(or) 72 688 T
1 F
(, and) 85.91 688 T
4 F
( not) 109.23 688 T
1 F
(.  Other operators such as a thresholded sum and conditional comparison can be in-) 138.01 688 T
(cluded in the system\325) 72 664 T
(s function set, so that very \337exible conditions can be evolved with a set of ) 173.61 664 T
(primitives that is still quite small.  An \322s-classi\336er\323 would thus have an s-expression as its condi-) 72 640 T
(tion; its action would be a bit string as usual \050though one can imagine the action also as an s-ex-) 72 616 T
(pression\051.  The advantage of s-classi\336ers over standard ones would be to permit the evolution of ) 72 592 T
(generalizations which suit the) 72 568 T
2 F
( S) 214.9 568 T
5 F
([A]) 223.9 565 T
1 F
( functions of arbitrary environments better than can the stan-) 237.77 568 T
(dard classi\336er) 72 544 T
(\325) 139.39 544 T
(s conjunctive syntax.) 142.73 544 T
3 F
(6. Summary and Conclusions) 72 508.67 T
1 F
-0.24 (This paper has presented ZCS, a basic classi\336er system for reinforcement learning that retains ) 90 482 P
-0.41 (much of Holland\325) 72 458 P
-0.41 (s original framework while simplifying it so as to increase understandability and ) 155.8 458 P
(performance.  ZCS\325) 72 434 T
(s relation to Q-learning was brought out, and its performance shown to be ) 166.93 434 T
(quite similar in two experimental environments. Four extensions of ZCS were proposed: tempo-) 72 410 T
(rary memory) 72 386 T
(, more sophisticated action selection, a niche GA, and \322s-classi\336ers\323.  ) 133.5 386 T
(There would appear to be several principal advantages of a classi\336er system like ZCS in rein-) 90 356 T
(forcement learning problems.  First, ZCS is a Q-like system which has its own built-in basis for ) 72 332 T
(generalization\321the classi\336ers themselves.  This contrasts with look-up table implementations of ) 72 308 T
(Q-learning which either don\325) 72 284 T
(t generalize or must be supplemented by clustering methods \050Ma-) 211.34 284 T
(hadevan & Connell 1992\051, and with neural-network-based Q-learners which generalize through ) 72 260 T
(the sometimes slow process of backpropagation.  In addition,  the proposed s-classi\336er extension ) 72 236 T
-0.23 (to ZCS may permit achievement of ef) 72 212 P
-0.23 (\336cient generalizations with respect to the underlying space.  ) 251.61 212 P
(Second, ZCS appears to be extensible to handle environments calling for temporary memory and ) 72 188 T
(hierarchical behavior using a memory register technique not seen in other approaches to rein-) 72 164 T
-0.07 (forcement learning.  Finally) 72 140 P
-0.07 (, like any classi\336er system, ZCS of) 204.91 140 P
-0.07 (fers a Darwinian perspective on re-) 371.51 140 P
(inforcement learning that contrasts with the many approaches that rely principally on error ) 72 116 T
(correction.) 72 92 T
FMENDPAGE
%%EndPage: "25" 24
4 14 /Times-Italic FMDEFINEFONT
%%Page: "24" 24
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(24) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
1 F
0 X
(niches later in a chain.  Finally) 72 712 T
(, the panmictic GA would be retained, but at a reduced probability ) 218.79 712 T
(of invocation, to of) 72 688 T
(fset any inbreeding tendency of the niche GA, and to give some degree of em-) 163.73 688 T
(phasis to clearly more remunerative niches.  Since the niche GA crosses classi\336ers in the same ) 72 664 T
([M], the of) 72 640 T
(fspring are guaranteed to match the same input, so the generation of never) 124.07 640 T
(-matching ) 479.22 640 T
(classi\336ers in sparse environments should be greatly reduced.  An experimental classi\336er system ) 72 616 T
(has been developed along the above lines \050W) 72 592 T
(ilson, in preparation\051.) 288.35 592 T
4 F
(5.4    S-classi\336ers) 72 556.67 T
1 F
(As discussed in Section 4, ZCS\325) 90 530 T
(s population [P] at any moment constitutes a mapping from ) 243.92 530 T
2 F
-0.27 (x,a) 72 506 P
1 F
-0.27 ( pairs to action set strengths ) 86.32 506 P
2 F
-0.27 (S) 221.3 506 P
5 F
-0.22 ([A]) 227.29 503 P
1 F
-0.27 ( which control the system.  The objective of the reinforcement ) 241.16 506 P
(and discovery components is to evolve mappings [P] that produce better and better performance ) 72 482 T
(in the environment.  In this section we consider the mapping\325) 72 458 T
(s underlying units, the classi\336ers, ) 365.48 458 T
-0.16 (and how their representation might usefully be modi\336ed. Classi\336ers as we usually know them are ) 72 434 P
-0.05 (somewhat limited beasts in that their conditions are expressed as conjunctive predicates.  That is, ) 72 410 P
(they match, or are true, if and only if all of the bits speci\336ed in the condition match.  A classi\336er ) 72 386 T
(can express a generalization, but only in a particular way: by saying \322these bits must be just so, ) 72 362 T
-0.23 (and the rest don\325) 72 338 P
-0.23 (t matter\323, i.e., the generalization must be a hyperplane.  It is not possible, in a sin-) 151.35 338 P
-0.03 (gle conjunctive classi\336er) 72 314 P
-0.03 (, to express a generalization such as \322bit 3 or bit 5 must be a one\323, or \322at ) 190.72 314 P
(least two of bits 3, 5, and 7 must be ones\323.  Of course, binary classi\336ers completely ignore the ) 72 290 T
(world of continuous variables.  Some work \050e.g., Grefenstette 1992\051 has been done with classi\336-) 72 266 T
-0.03 (ers whose conditions are specialized for certain domains, and, as mentioned earlier) 72 242 P
-0.03 (, there is work ) 468.52 242 P
(on continuous inputs via fuzzy classi\336ers.  However) 72 218 T
(, there is only a little work \050Booker 1991\051 to-) 322.02 218 T
-0.31 (ward a general reformulation of classi\336er representation that would permit expression of arbitrary ) 72 194 P
-0.37 (generalizations.  The main reason has been that it was not clear how to apply genetic operations to ) 72 170 P
-0.41 (arbitrary logical expressions, whereas one did see how to do it for conjuncts expressed in the 1,0,# ) 72 146 P
-0.1 (language.  Now) 72 122 P
-0.1 (, however) 146.63 122 P
-0.1 (, the development of genetic programming \050Koza 1992\051 has shown how ) 193.34 122 P
(genetic operations can be applied successfully to arbitrary functions encoded as Lisp s-expres-) 72 98 T
FMENDPAGE
%%EndPage: "24" 23
6 12 /Symbol FMDEFINEFONT
7 10 /Times-Italic FMDEFINEFONT
%%Page: "23" 23
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(23) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
1 F
0 X
-0.13 (In contrast, environments like W) 90 712 P
-0.13 (oods1 and W) 246.08 712 P
-0.13 (oods7 are \322sparse\323 in the sense that the set of in-) 308.15 712 P
(puts which occur in them form a very small subset of the possible strings under that encoding.  ) 72 688 T
(Consequently panmictic crossover in ZCS often produces of) 72 664 T
(fspring that never match and so re-) 361.26 664 T
(main dead wood in [P] until deletion happens to eliminate them.  This restricts the population ) 72 640 T
-0.25 (computation space\321the set of evaluable classi\336ers\321and does not contribute to the search for bet-) 72 616 P
-0.01 (ter classi\336ers in the niches that exist.  While ZCS is lar) 72 592 P
-0.01 (gely successful in W) 334.81 592 P
-0.01 (oods1 and W) 433.41 592 P
-0.01 (oods7, it ) 495.71 592 P
(is possible that a non-panmictic niche-based GA would improve performance.  Booker \0501982, ) 72 568 T
(1989\051 has investigated and long advocated a niche GA for classi\336er systems, for many of the rea-) 72 544 T
-0.32 (sons noted here.  His implementation is part of a lar) 72 520 P
-0.32 (ger system having many aspects not present in ) 316.73 520 P
(ZCS, and to keep to ZCS\325) 72 496 T
(s spirit of minimalness we propose here a niche GA that contains some ) 195.94 496 T
-0.4 (but not all of the mechanisms in Booker) 72 472 P
-0.4 (\325) 261.88 472 P
-0.4 (s implementation.  One of his insights was that niches are ) 265.21 472 P
(ef) 72 448 T
(fectively identi\336ed by the various match sets that occur) 81.1 448 T
(, so that a GA designed to search the ) 345.77 448 T
(niches should be restricted to classi\336ers in [M].  A further suggestion was that if, under exact ) 72 424 T
-0.23 (matching, [M] was empty or small, classi\336ers that nearly or partially match the input should be al-) 72 400 P
(lowed to participate in the niche GA.  The idea was that partial matchers contain some, albeit im-) 72 376 T
(perfect, information relevant to the niche, and so should participate if there were few exact ) 72 352 T
-0.33 (matchers.  W) 72 328 P
-0.33 (e are unsure of the value of using partial matches, since the mismatches are a form of ) 133.99 328 P
(noise, and we leave this aspect out for now) 72 304 T
(.) 277.4 304 T
(In line with Booker) 90 274 T
(\325) 184.05 274 T
(s basic concept, we propose an extension to ZCS in which a niche GA ) 187.39 274 T
(supplements the existing panmictic one.  The niche GA would simply act on [M] with a certain ) 72 250 T
-0.26 (probability) 72 226 P
2 F
-0.26 ( ) 124.64 226 P
6 F
-0.26 (r) 127.38 226 P
7 F
-0.22 (nich) 133.96 223 P
5 F
-0.22 (e) 151.17 223 P
1 F
-0.26 (; there would be no special triggering conditions.  The GA would operate as usu-) 155.61 226 P
(al, except that if [M] contained just one classi\336er) 72 202 T
(, only mutation and not crossover could occur) 306.35 202 T
(.  ) 525.54 202 T
(Deletion would occur from [P] as a whole, using a variation on a niche balancing technique that ) 72 178 T
-0.31 (Booker developed.  W) 72 154 P
-0.31 (e would have each classi\336er keep an estimate \050by exponential averaging\051 of ) 178.02 154 P
(the number of classi\336ers in its match sets.  Then a classi\336er) 72 130 T
(\325) 357.59 130 T
(s probability of deletion would be ) 360.92 130 T
(proportional to this quantity) 72 106 T
(, so that niches would tend to have the same number of members, in-) 205.49 106 T
-0.33 (dependent of niche strength.  This avoids the panmictic GA) 72 82 P
-0.33 (\325) 353.46 82 P
-0.33 (s problem of giving more resources to ) 356.8 82 P
FMENDPAGE
%%EndPage: "23" 22
%%Page: "22" 22
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(22) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
1 F
0 X
(problem usually means solving a set of subproblems each due to an aspect of the system\325) 72 712 T
(s envi-) 498.71 712 T
(ronment.  Thus the GA in a classi\336er system faces a multiple optimization problem in which it ) 72 688 T
-0.14 (must allocate resources\321classi\336ers\321to search more or less separate niches of the space.  The sit-) 72 664 P
-0.06 (uation is further complicated by the fact that, often, success in a niche is contingent on success in ) 72 640 P
(another niche.  For instance, this occurs if, as in ZCS, classi\336ers form chains to reach reward: ) 72 616 T
(each step in the chain can be regarded as an environmental niche for which good classi\336ers must ) 72 592 T
(be found; if not, the chain as a whole is weakened or broken.  Under such circumstances it is not ) 72 568 T
-0.03 (obvious that a panmictic GA is the best way to identify and search the niches, since it is not clear ) 72 544 P
(that the recombination of classi\336ers from an arbitrary pair of niches will be relevant to either of ) 72 520 T
(them or to any other niche.) 72 496 T
-0.12 (Quite separately from mate choice, the practice in a panmictic GA of selecting the \336rst parent ) 90 466 P
-0.18 (from the population as a whole, or globally) 72 442 P
-0.18 (, is problematic for classi\336er systems in which a classi-) 277.14 442 P
(\336er) 72 418 T
(\325) 88.43 418 T
(s \336tness is based on strength.  Dif) 91.76 418 T
(ferent niches may quite normally have dif) 252.79 418 T
(ferent reward lev-) 453.09 418 T
(els, and therefore dif) 72 394 T
(ferent strengths in the corresponding classi\336ers.  If the niches are separate ) 171.03 394 T
(and unrelated, it makes sense to base selection on strength because then greater resources will go ) 72 370 T
(to the more remunerative niches.  However) 72 346 T
(, if the niches belong to the same chain, and the rein-) 279.02 346 T
(forcement cycle has a discount factor ) 72 322 T
6 F
(g) 253.84 322 T
1 F
( ) 258.77 322 T
6 F
(<) 261.77 322 T
1 F
( 1, then early niches will necessarily have less strength ) 268.36 322 T
-0.05 (than later ones.  It is not clear that the early niches should get fewer resources, though, since they ) 72 298 P
(\322set up\323 and so permit reward ultimately to be received in the later ones.) 72 274 T
(The classi\336er system BOOLE \050W) 90 244 T
(ilson 1987a\051 successfully used a panmictic GA to learn the ) 251.41 244 T
-0.02 (Boolean multiplexer) 72 220 P
-0.02 (, a highly nonlinear logical function.  There, however) 169.78 220 P
-0.02 (, the niches, which cor-) 425.29 220 P
(responded to disjuncts of the function, had equal reward schedules, dependent only on whether ) 72 196 T
-0.06 (the system was right or wrong, and the problem was not sequential.  In addition, the environment ) 72 172 P
(was \322dense\323 in the sense that the system would see every possible input string eventually) 72 148 T
(.  That ) 498.93 148 T
(meant that every classi\336er produced by panmictic crossover would eventually match and receive ) 72 124 T
(an evaluation, so that every cross was in some degree fruitful and contributed to the search.) 72 100 T
FMENDPAGE
%%EndPage: "22" 21
%%Page: "21" 21
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(21) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
1 F
0 X
(this direction see Lin \0501993\051 and Dorigo \0501993\051.) 72 712 T
-0.19 (Consider a system which integrates rewards over time, subtracting its metabolic costs to yield ) 90 682 P
(a current ener) 72 658 T
(gy reserve ) 137.71 658 T
2 F
(E\050t\051) 190.33 658 T
1 F
(. The system might be initialized with a reserve ) 208.98 658 T
2 F
(E) 439.49 658 T
7 F
(0) 446.82 655 T
1 F
(.  W) 451.82 658 T
(ould it not ) 471.17 658 T
-0.19 (make sense for the system\325) 72 634 P
-0.19 (s explore/exploit balance to depend on ) 200.48 634 P
2 F
-0.19 (E\050t\051) 387.21 634 P
1 F
-0.19 (? For instance, the probabil-) 405.86 634 P
-0.03 (ity of exploration ) 72 610 P
2 F
-0.03 (Pr) 158.21 610 P
-0.03 (ob\050explor) 169.76 610 P
-0.03 (e\051) 215.94 610 P
1 F
-0.03 ( could be given by a function ) 225.26 610 P
2 F
-0.03 (f\050E\050t\051\051) 367.99 610 P
1 F
-0.03 ( where) 397.96 610 P
2 F
-0.03 ( f) 430.23 610 P
1 F
-0.03 ( would have been set ) 436.54 610 P
(by evolution.  For high values of ) 72 586 T
2 F
(E) 231.91 586 T
1 F
(, there could be strong tendency to explore, corresponding to ) 239.24 586 T
(play or curiosity in an animal.  A lar) 72 562 T
(ge value of ) 246 562 T
2 F
(E) 302.29 562 T
7 F
(0) 309.61 559 T
2 F
( ) 314.61 562 T
1 F
(would then mean considerable exploration ) 317.61 562 T
-0.11 (while young, yielding to greater exploitation as ) 72 538 P
2 F
-0.11 (E\050t\051) 301.1 538 P
1 F
-0.11 ( fell and the system had to gain its own food.  ) 319.75 538 P
(Later) 72 514 T
(, through learning, ) 96.83 514 T
2 F
(E\050t\051) 188.43 514 T
1 F
( could start rising, leading eventually to prosperity that would again ) 207.08 514 T
(permit exploration or play) 72 490 T
(.  Of course this picture is too simple: if the system got in trouble and ) 196.8 490 T
2 F
(E\050t\051) 72 466 T
1 F
( began falling precipitously) 90.65 466 T
(, greater exploration might suddenly be in order) 221.45 466 T
(. Whatever the ) 449.96 466 T
(characteristic forms of) 72 442 T
2 F
( Pr) 179.9 442 T
(ob\050explor) 194.45 442 T
(e\051) 240.64 442 T
1 F
(, the point is that the system\325) 249.96 442 T
(s overall success is relevant to ) 387.56 442 T
-0.03 (action selection in a way that deserves study) 72 418 P
-0.03 (.  One approach we are investigating is to let the ) 283.87 418 P
2 F
-0.03 (T) 518.06 418 P
1 F
-0.03 ( in ) 524.73 418 P
(the exponential roulette wheel above depend on ) 72 394 T
2 F
(E\050t\051) 304.16 394 T
1 F
( through various plausible functions) 322.81 394 T
2 F
( f) 495.37 394 T
1 F
(.  This ) 501.7 394 T
(can be applied straightforwardly to ZCS with the slight addition that actions ) 72 370 T
2 F
(a) 439.78 370 T
7 F
(i) 445.77 367 T
5 F
( ) 448.55 367 T
1 F
(such that [M]) 451.05 370 T
7 F
(i) 515.67 367 T
1 F
( is ) 518.45 370 T
-0.36 (empty should still be represented, with low strength values, in the probability calculation. Then, if ) 72 346 P
-0.05 (such an action is chosen, a classi\336er would be created to execute it.  In this way ZCS could break ) 72 322 P
(out of path habits for cases where the best action is not represented in [M].) 72 298 T
4 F
(5.3   Niche GA) 72 262.67 T
1 F
(The genetic algorithm employed in ZCS\325) 90 236 T
(s discovery component is ) 286.88 236 T
2 F
(panmictic) 411.47 236 T
1 F
(: a classi\336er has ) 458.77 236 T
-0.02 (an equal probability of mating \050crossing\051 with any other classi\336er in [P] having a given strength.  ) 72 212 P
(The GAs used in function optimization problems are usually panmictic \050with the notable excep-) 72 188 T
(tion of parallel implementations where a notion of geographic distance between strings may con-) 72 164 T
(trol the mating probability\051.  It is felt that in problems such as optimization where a single best ) 72 140 T
-0.08 (point is sought, samples from all parts of the space should be capable of recombination.  The situ-) 72 116 P
(ation is dif) 72 92 T
(ferent, however) 123.09 92 T
(, for spaces being searched by classi\336er systems. There, solving the ) 197.87 92 T
FMENDPAGE
%%EndPage: "21" 20
8 10 /Symbol FMDEFINEFONT
9 8 /Times-Italic FMDEFINEFONT
10 18 /Symbol FMDEFINEFONT
%%Page: "20" 20
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(20) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
1 F
0 X
(ment temporary memory than the complex message list of the canonical framework.  Quite ) 72 712 T
(separately) 72 688 T
(, the approach forms an interesting contrast to the use of recurrent neural networks to ) 119.84 688 T
-0.19 (implement temporary memory in reinforcement learning \050Elman 1990, Lin 1993\051. In the latter) 72 664 P
-0.19 (, ef-) 520.88 664 P
(fective \322history features\323 are generated by unfolding the recurrent net and training via back prop-) 72 640 T
(agation.  In the ZCS memory register approach, potential history features take the form of bits ) 72 616 T
(placed in the register which are matched by succeeding classi\336ers.  Then features which indeed ) 72 592 T
-0.36 (matter for performance would cause selection of the classi\336ers which they couple.  The dif) 72 568 P
-0.36 (ference ) 502.08 568 P
-0.02 (between the two approaches to temporary memory is a dif) 72 544 P
-0.02 (ference between learning by error cor-) 350.42 544 P
(rection and learning by a Darwinian process of variation and selection.) 72 520 T
4 F
(5.2   Performance-Based Action Selection) 72 484.67 T
1 F
(ZCS uses the relatively primitive roulette wheel action selection described in Section 2.  The ) 90 458 T
(probability of selection of an action ) 72 434 T
2 F
(a) 245.88 434 T
7 F
(i) 251.88 431 T
1 F
(, ) 254.66 434 T
2 F
(Pr) 260.65 434 T
(ob\050a) 272.2 434 T
7 F
(i) 294.19 431 T
2 F
(\051) 296.96 434 T
1 F
(, is proportional to the total strength ) 300.96 434 T
( of ) 506.45 434 T
(classi\336ers in [M] advocating ) 72 410 T
2 F
(a) 211.9 410 T
7 F
(i) 217.9 407 T
1 F
(.  A more \337exible method is to let ) 220.68 410 T
-0.35 (then let ) 72 336.74 P
2 F
-0.35 (T) 109.93 336.74 P
1 F
-0.35 ( be lar) 116.6 336.74 P
-0.35 (ge at the start of a run where more exploration is presumably desirable, and reduce ) 145.65 336.74 P
(it with time in order to make the judged best actions  more probable.  Still, the \322annealing sched-) 72 312.74 T
-0.16 (ule\323) 72 288.74 P
2 F
-0.16 ( T\050t\051 ) 91.98 288.74 P
1 F
-0.16 (must be determined in advance, unrelated to the system\325) 115.66 288.74 P
-0.16 (s actual success or lack thereof.  ) 383.89 288.74 P
(In the reinforcement learning literature, a class of more sophisticated methods keeps track of the ) 72 264.74 T
-0.02 (variance or uncertainty of Q \050say\051 estimates, and explores with the aim of progressively reducing ) 72 240.74 P
(uncertainty but with a bias toward apparently better actions.  Kaelbling\325) 72 216.74 T
(s interval estimation is ) 416.09 216.74 T
-0.16 (one such method, in which ) 72 192.74 P
2 F
-0.16 (Pr) 203.12 192.74 P
-0.16 (ob\050a) 214.67 192.74 P
7 F
-0.13 (i) 236.65 189.74 P
2 F
-0.16 (\051) 239.43 192.74 P
1 F
-0.16 ( is proportional to the sum of the Q estimate and its variance.  ) 243.43 192.74 P
-0.22 (While ef) 72 168.74 P
-0.22 (fective in many problems, the uncertainty reducing methods can still miss achieving opti-) 113.2 168.74 P
(mality if the parameters of the explore/exploit balance are not within appropriate ranges.  W) 72 144.74 T
(e ) 513.03 144.74 T
(wondered whether these essentially formal methods could bene\336t from a perspective which took ) 72 120.74 T
-0.21 (into account the system\325) 72 96.74 P
-0.21 (s overall performance or prosperity) 187.64 96.74 P
-0.21 (.  For other work which takes a step in ) 355.22 96.74 P
476.19 419.78 506.45 443.2 C
2 F
0 X
0 K
(S) 476.64 434 T
5 F
(M) 489.05 429.55 T
8 F
([) 484.76 429.55 T
(]) 498.4 429.55 T
9 F
(i) 503.78 425.33 T
0 0 612 792 C
168.79 356.74 443.21 388 C
2 F
0 X
0 K
(P) 169.79 372.78 T
(r) 177.82 372.78 T
(o) 183.19 372.78 T
(b) 189.89 372.78 T
(a) 203.7 372.78 T
7 F
(i) 210.16 368.31 T
6 F
(\050) 198.6 372.78 T
(\051) 213.54 372.78 T
1 F
(e) 245.22 372.78 T
(x) 250.55 372.78 T
(p) 256.54 372.78 T
2 F
(S) 271.35 372.78 T
5 F
(M) 283.76 368.33 T
8 F
([) 279.47 368.33 T
(]) 293.11 368.33 T
9 F
(i) 298.49 364.1 T
2 F
(T) 308.72 372.78 T
6 F
(\244) 303.71 372.78 T
(\350) 266.24 361.76 T
(\370) 315.99 361.76 T
(\346) 266.24 376.38 T
(\366) 315.99 376.38 T
(\350) 240.12 361.76 T
(\370) 322.59 361.76 T
(\346) 240.12 376.38 T
(\366) 322.59 376.38 T
1 F
(e) 357.52 372.78 T
(x) 362.84 372.78 T
(p) 368.84 372.78 T
2 F
(S) 383.64 372.78 T
5 F
(M) 396.06 368.33 T
8 F
([) 391.77 368.33 T
(]) 405.41 368.33 T
9 F
(k) 410.79 364.1 T
2 F
(T) 422.34 372.78 T
6 F
(\244) 417.34 372.78 T
(\350) 378.54 361.76 T
(\370) 429.62 361.76 T
(\346) 378.54 376.38 T
(\366) 429.62 376.38 T
7 F
(k) 347.89 359.8 T
10 F
(\345) 343.69 369.58 T
6 F
(\350) 338.59 361.76 T
(\370) 436.22 361.76 T
(\346) 338.59 376.38 T
(\366) 436.22 376.38 T
(\244) 331.59 372.78 T
(=) 225.54 372.78 T
0 0 612 792 C
FMENDPAGE
%%EndPage: "20" 19
%%Page: "19" 19
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(19) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
1 F
0 X
(steps but with a minimum of mechanism so that evolution of appropriate classi\336ers would occur ) 72 712 T
(with reasonable probability) 72 688 T
(.  At the same time, it seemed that in many problems of interest, the ) 202.46 688 T
(amount of information that needed to be transferred was quite small.  For instance, often a deci-) 72 664 T
(sion depends simply on whether or not some prior event has occurred, i.e., just one bit may suf-) 72 640 T
(\336ce.  Accordingly) 72 616 T
(, we propose to extend ZCS using a memory-register approach.  For this, ) 157.49 616 T
(consider an expanded classi\336er format of which the following is an example) 72 592 T
(#100,1) 259.58 562 T
(1# : 01,##0 .) 292.12 562 T
(Here the condition has two parts, an environmental part #100, and a memory register part, 1) 72 532 T
(1#, ) 512.57 532 T
(both of which must match for the condition to be satis\336ed.  The memory register itself is a three ) 72 508 T
-0.31 (bit register whose contents are set and changed by a supplement to the action side of the classi\336er) 72 484 P
-0.31 (, ) 534.31 484 P
(as follows.  The \336rst part of the action side, 01, is an action \050including the null action\051 af) 72 460 T
(fecting ) 495.83 460 T
(the external world.  The new second part, ##0, codes an internal action af) 72 436 T
(fecting the memory reg-) 423.5 436 T
-0.11 (ister: a 0 or 1 writes that value to the corresponding register position, a # leaves its corresponding ) 72 412 P
(position alone.  \050In a variant, there would be just one action part coding either an external action ) 72 388 T
(or an internal one af) 72 364 T
(fecting the register) 168.37 364 T
(.\051) 257.63 364 T
-0.17 (The simplest experiment would implement a 1-bit register in an environment designed so that ) 90 334 P
(exactly one bit of temporary memory would be important in certain situations.  If the GA indeed ) 72 310 T
(took advantage of the register) 72 286 T
(, more elaborate experiments with a progressively lar) 214.07 286 T
(ger register ) 468.99 286 T
-0.42 (could be tried. An interesting possibility would be that, having found some register bits useful, the ) 72 262 P
(system would evolve classi\336ers referring not only to those bits but to others representing re\336ne-) 72 238 T
-0.41 (ments of the information in the \336rst bits.  Certain positions of the register might in this speculation ) 72 214 P
-0.07 (evolve to denote tags which labeled behavioral modules, or intentions, with other bits controlling ) 72 190 P
(the more detailed action of the modules, in ef) 72 166 T
(fect implementing a behavior hierarchy \050W) 289.3 166 T
(ilson ) 496.32 166 T
-0.27 (1987b\051.  Of course, all such outcomes imply extensive further research \050including additions to the ) 72 142 P
(performance and reinforcement cycles\051, but we suggest at this point that a memory register ap-) 72 118 T
(proach, due to its simplicity) 72 94 T
(, is at the moment a better test of classi\336er systems\325 ability to imple-) 204.82 94 T
FMENDPAGE
%%EndPage: "19" 18
%%Page: "18" 18
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(18) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
1 F
0 X
(architecture.  Dynamic planning requires that the system keep track of the sensory input conse-) 72 712 T
(quent to an action taken in a given state; from this information the system can perform Q-value ) 72 688 T
-0.02 (updates on hypothetical as well as actual events.  Because classi\336ers do not encode or predict the ) 72 664 P
(input that will follow their activation, Roberts introduced a bounded data structure called a ) 72 640 T
2 F
(fol-) 510.04 640 T
(lowset) 72 616 T
1 F
(, associated with each classi\336er) 102.65 616 T
(, to record this information as it is gained.  While Dyna-Q-) 252.39 616 T
(CS appears to be a promising approach to model building in classi\336er systems, updates using the ) 72 592 T
-0.06 (followsets are intricate.  In addition, Dyna-Q-CS\325) 72 568 P
-0.06 (s results on W) 308.83 568 P
-0.06 (oods7\32121.7 steps to food asymp-) 375.99 568 P
(totically\321suggest the system is not yet fully shaken down.) 72 544 T
3 F
(5. Extensions to ZCS ) 72 508.67 T
1 F
-0.03 (Having in the last few sections described ZCS, illustrated its performance, and shown its rela-) 90 482 P
(tion to Q-learning, we now go on to suggest ways in which ZCS, as a basic, understandable clas-) 72 458 T
-0.13 (si\336er system foundation, can be extended.  For this we will take the foundation to be as described ) 72 434 P
(in Section 2, except that instead of the update expression \0502\051 we will from now on de\336ne ZCS to ) 72 410 T
(use the more completely Q-like expression \0504\051.) 72 386 T
4 F
(5.1   T) 72 350.67 T
(emporary Memory) 106.48 350.67 T
1 F
(In Holland\325) 90 324 T
(s original framework, information could in principle be carried over from one ) 144.97 324 T
(time-step to the next by posting a message to the internal message list, then matching it on the ) 72 300 T
(next cycle.  Unfortunately) 72 276 T
(, possibly for reasons of formal simplicity) 196.46 276 T
(, internal messages were de-) 396.55 276 T
(\336ned as strings of length equal to strings from the detectors, so that the internal messages tended ) 72 252 T
-0.11 (to be long.  T) 72 228 P
-0.11 (emporary memory and other uses of messages depend on classi\336ers which post mes-) 135 228 P
(sages that other classi\336ers can match.  Unless special non-GA triggered operators are employed ) 72 204 T
-0.09 (\050Riolo 1989\051, evolution of appropriately coupled classi\336ers becomes increasingly improbable the ) 72 180 P
-0.39 (longer the messages are.  In fact, there appears to be only one investigation in the literature \050Smith ) 72 156 P
-0.24 (1991\051 reporting signi\336cant generation of couplings by the GA alone, and there the messages were ) 72 132 P
(short.) 72 108 T
(W) 90 78 T
(e sought a simple extension to ZCS that could permit transfer of information between time-) 100.36 78 T
FMENDPAGE
%%EndPage: "18" 17
%%Page: "17" 17
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(17) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
1 F
0 X
(as Q-learning estimates a function of input-action combinations, the modi\336ed bucket brigade of ) 72 712 T
(\0504\051 updates ) 72 688 T
2 F
(rule set) 128.62 688 T
1 F
(-action combinations.  While ) 164.26 688 T
2 F
(S) 306.51 688 T
5 F
([A]) 312.5 685 T
1 F
( is not obviously a function in the sense ) 326.38 688 T
2 F
(Q\050x,a\051) 72 664 T
1 F
( is, we can gain perspective by considering that for every input ) 102.97 664 T
2 F
(x) 407.07 664 T
1 F
( and action ) 412.4 664 T
2 F
(a) 468.02 664 T
1 F
(, the system ) 474.02 664 T
(will in general produce an action set [A], with strength ) 72 640 T
2 F
(S) 337.47 640 T
5 F
([A]) 343.47 637 T
1 F
(, whose members all match ) 357.34 640 T
2 F
(x ) 491.25 640 T
1 F
(and ad-) 499.57 640 T
-0.4 (vocate ) 72 616 P
2 F
-0.4 (a) 105.9 616 P
1 F
-0.4 (.  Thus the current population [P] can be regarded as embodying a ) 111.9 616 P
2 F
-0.4 (mapping) 426.47 616 P
1 F
-0.4 ( from ) 468.44 616 P
6 F
-0.4 (C) 496.96 616 P
1 F
-0.4 ( x ) 505.62 616 P
6 F
-0.4 (A) 516.81 616 P
1 F
-0.4 ( to ) 525.47 616 P
-0.3 (strengths ) 72 592 P
2 F
-0.3 (S) 118.01 592 P
1 F
-0.3 (.  As noted in Section 2, the mapping is capable of generalization because, due to #\325) 124 592 P
-0.3 (s in ) 520.6 592 P
(the classi\336ers, a given [A] will often match more than one ) 72 568 T
2 F
(x) 353.8 568 T
1 F
(.  While we have no proof that what ) 359.12 568 T
-0.29 (we shall call the ) 72 544 P
2 F
-0.29 (Q-bucket brigade) 151.45 544 P
1 F
-0.29 ( \050QBB\051 of \0504\051 leads to a population that maps optimally) 235.42 544 P
-0.29 (, we can ) 498.25 544 P
(still compare its experimental performance to that of better understood relatives like Q-learning.  ) 72 520 T
(T) 90 490 T
(o do this let us \336rst explain that the solid curves in Figures 3 and 6 were obtained via the ) 96.49 490 T
(QBB update rule \0504\051, whereas the dotted curves are for rule \0502\051, without the \322max\323.  Q-learning ) 72 466 T
(was tried informally on W) 72 442 T
(oods1 by Kaelbling \0501993\051 who employed her ) 197.62 442 T
2 F
(interval estimation ) 421.8 442 T
1 F
-0.45 (\050Kaelbling 1990\051 exploration technique.  The result was very rapid descent in steps to food to very ) 72 418 P
(nearly the optimum,  faster and better than ZCS using QBB.  On W) 72 394 T
(oods7, the comparison was ) 394.5 394 T
(closer) 72 370 T
(.  Kaelbling\325) 99.98 370 T
(s system reached approximately 4 steps to food on average \050vs. 5 for ZCS\051, ) 159.61 370 T
-0.02 (somewhat more rapidly) 72 346 P
-0.02 (.  Littman \0501993\051 reports \322Q-learning identi\336ed a Class 1 agent that aver-) 184.44 346 P
-0.39 (ages 0.27 foods per step [3.70 steps to food]\323\321i.e., this was the best performance of several runs.  ) 72 322 P
(Both Kaelbling and Littman implemented the Q function as a lookup table.  W) 72 298 T
(e interpret the re-) 448.14 298 T
-0.02 (sults of these informal and preliminary comparisons as follows.  On W) 72 274 P
-0.02 (oods1, Q-learning per-) 410.61 274 P
(formed essentially perfectly) 72 250 T
(, as it should, because the environment is Class 1 and ef) 205.12 250 T
(fective ) 472.39 250 T
-0.14 (exploration occurred.  Our hypothesis is that ZCS performed less well on W) 72 226 P
-0.14 (oods1 because the ex-) 434.83 226 P
(ploration technique was less ef) 72 202 T
(fective and in particular had no way of exploring action sets not ) 219.68 202 T
(represented in [M].  On W) 72 178 T
(oods7, the comparison is much closer) 198.27 178 T
(, with performance for both Q-) 378.34 178 T
(learning and ZCS limited primarily by the fact that W) 72 154 T
(oods7 is Class 2.  W) 329.21 154 T
(e hypothesize that ) 426.2 154 T
(ZCS\325) 72 130 T
(s more primitive exploration technique accounts for the performance dif) 97.33 130 T
(ference. ) 443.18 130 T
(Besides ZCS, there are Q-learning-like mechanisms in Roberts\325) 90 100 T
(s \0501993\051 classi\336er system ) 395.12 100 T
-0.11 (Dyna-Q-CS, which is designed to do dynamic planning along the lines of Sutton\325) 72 76 P
-0.11 (s \0501991\051 DYNA ) 460.07 76 P
FMENDPAGE
%%EndPage: "17" 16
%%Page: "16" 16
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(16) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 58.79 540 720 R
V
5 F
0 X
(\0503\051) 528.35 700.95 T
1 F
-0.12 (where ) 72 657.71 P
2 F
-0.12 ( ) 115.17 657.71 P
1 F
-0.12 (is the input on the next time-step.  It has been proved \050W) 118.04 657.71 P
-0.12 (atkins 1989\051 that if the environ-) 388.39 657.71 P
(ment is Markovian \050Class 1\051 and all ) 72 632.71 T
2 F
(x,a) 246.89 632.71 T
1 F
( combinations are tried suf) 261.21 632.71 T
(\336ciently often, this update pro-) 388.9 632.71 T
(cedure will cause ) 72 603.66 T
( to conver) 200.64 603.66 T
(ge to a function ) 248.39 603.66 T
2 F
(Q\050x,a\051 ) 326.33 603.66 T
1 F
(such that by carrying out the action ) 360.3 603.66 T
(which maximizes ) 72 578.67 T
2 F
(Q\050x,a\051) 159.28 578.67 T
1 F
( for each) 190.24 578.67 T
2 F
( x) 232.2 578.67 T
1 F
(, the system will optimize the discounted sum of future re-) 240.52 578.67 T
(wards,  ) 72 538.94 T
(, that it receives. Thus if the discounted sum is accepted) 175.91 538.94 T
5 F
(2) 443.73 543.74 T
1 F
( as a reasonable ) 448.72 538.94 T
-0.3 (measure of return\321 it rates rewards received sooner higher than equal rewards received later) 72 502 P
-0.3 (, and ) 514.28 502 P
-0.17 (so emphasizes expeditious behavior\321and if the environment is Class 1 and suf) 72 478 P
-0.17 (\336ciently explored, ) 450.05 478 P
(Q-learning of) 72 454 T
(fers a technique for achieving optimal performance with the advantage of being ) 136.73 454 T
(quite well understood analytically) 72 430 T
(.  Similar proofs do not exist for Class 2 environments, nor for ) 234.12 430 T
-0.09 (the case where the set of possible inputs ) 72 406 P
2 F
-0.09 (x) 266.48 406 P
1 F
-0.09 ( is so lar) 271.81 406 P
-0.09 (ge that explicit estimation of ) 311.64 406 P
2 F
-0.09 (Q\050x,a\051) 451.45 406 P
1 F
-0.09 ( for every ) 482.41 406 P
2 F
-0.09 (x) 531.76 406 P
1 F
-0.09 ( ) 537.09 406 P
(is impractical and the technique must be modi\336ed to generalize over \322similar\323 ) 72 382 T
2 F
(x) 449.73 382 T
1 F
(\325) 455.06 382 T
(s.  Nevertheless, ) 458.39 382 T
(Q-learning can work quite well in practice, as shown for instance in Lin \0501993\051.  There a neural ) 72 358 T
(network, which generalized over inputs, learned a Q-like function in a Class 2 environment and ) 72 334 T
(performance was good.) 72 310 T
(If we compare \0502\051 and \0503\051 we see that they are similar except for the max operation in \0503\051.  ) 90 280 T
-0.3 (Consider the match set [M]', and recall that in general it contains classi\336ers advocating various ac-) 72 256 P
-0.15 (tions; that is, it contains several dif) 72 232 P
-0.15 (ferent potential action sets, one for each advocated action.  W) 238.48 232 P
-0.15 (e ) 531.82 232 P
(could imagine modifying the update rule \0502\051 as follows) 72 208 T
5 F
(\0504\051) 528.35 168.13 T
1 F
(where now the max means the potential action set in [M]' with the highest total strength.  Expres-) 72 129.34 T
(sion \0504\051 would then closely parallel the Q-learning rule \0503\051.  The dif) 72 105.34 T
(ference is, brie\337y) 396.54 105.34 T
(, that where-) 479.36 105.34 T
72 82.79 540 97.77 C
72 82.79 540 97.77 R
7 X
0 K
V
81 95.75 225 95.75 2 L
V
0.5 H
2 Z
0 X
N
0 0 612 792 C
5 F
0 X
0 K
(2. See Schwartz \0501993\051 for a reinforcement algorithm that is not based on discounting future payoffs.) 90 76.12 T
210.34 678.91 390 720 C
2 F
0 X
0 K
(Q) 211.34 700.95 T
1 F
(\366) 213.68 703.63 T
2 F
(x) 227.81 700.95 T
(a) 239.13 700.95 T
6 F
(,) 233.13 700.95 T
(\050) 222.71 700.95 T
(\051) 245.74 700.95 T
2 F
(r) 271.71 700.95 T
7 F
(i) 276.84 696.48 T
(m) 280.2 696.48 T
(m) 288.01 696.48 T
6 F
(g) 308.52 700.95 T
1 F
(m) 316.3 700.95 T
(a) 325.63 700.95 T
(x) 330.96 700.95 T
2 F
(Q) 342.71 700.95 T
1 F
(\366) 345.04 703.63 T
2 F
(x) 358.46 700.95 T
6 F
(\242) 364.49 700.95 T
2 F
(a) 373.45 700.95 T
6 F
(\242) 380.15 700.95 T
(,) 367.45 700.95 T
(\050) 352.64 700.95 T
(\051) 383.01 700.95 T
(+) 298.23 700.95 T
(\254) 254.73 700.95 T
2 F
(a') 309.51 686.51 T
6 F
( \316) 318.07 686.51 T
2 F
( ) 329.62 686.51 T
1 F
(A) 332.62 686.51 T
8 F
(b) 258 708.5 T
0 0 612 792 C
104.17 652.71 115.17 666.91 C
2 F
0 X
0 K
(x) 105.17 657.71 T
6 F
(\242) 111.2 657.71 T
0 0 612 792 C
158.26 598.67 200.64 616.71 C
2 F
0 X
0 K
(Q) 159.26 603.66 T
1 F
(\366) 161.59 606.34 T
2 F
(x) 175.72 603.66 T
(a) 187.05 603.66 T
6 F
(,) 181.05 603.66 T
(\050) 170.62 603.66 T
(\051) 193.65 603.66 T
0 0 612 792 C
109.64 522 175.91 562.67 C
6 F
0 X
0 K
(g) 138.47 543.41 T
7 F
(j) 143.4 549 T
2 F
(r) 146.88 543.41 T
7 F
(t) 152.01 538.93 T
(j) 165.27 538.93 T
8 F
(+) 157.29 538.93 T
7 F
(j) 117.54 531.09 T
5 F
(0) 132.47 531.09 T
8 F
(=) 123.65 531.09 T
(\245) 123.94 554.89 T
10 F
(\345) 121.09 540.2 T
0 0 612 792 C
221.92 149.34 378.43 186 C
2 F
0 X
0 K
(S) 222.92 168.13 T
5 F
(A) 235.34 163.68 T
8 F
([) 231.05 163.68 T
(]) 243.02 163.68 T
2 F
(r) 272.52 168.13 T
7 F
(i) 277.64 163.66 T
(m) 281.01 163.66 T
(m) 288.82 163.66 T
6 F
(g) 308.62 168.13 T
1 F
(m) 321.58 168.13 T
(a) 330.92 168.13 T
(x) 336.24 168.13 T
2 F
(S) 349.28 168.13 T
5 F
(A) 361.69 163.68 T
8 F
([) 357.4 163.68 T
(]) 369.37 163.68 T
(\242) 374.96 163.68 T
6 F
(+) 299.03 168.13 T
(\254) 251.01 168.13 T
5 F
([A]') 313.51 154.33 T
8 F
(\315) 329.18 154.33 T
5 F
([M]') 336.3 154.33 T
8 F
(b) 255.33 175.33 T
0 0 612 792 C
FMENDPAGE
%%EndPage: "16" 15
%%Page: "15" 15
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(15) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
1 F
0 X
(memoryless system.  That is, how well could a system do which, say) 72 712 T
(, had a map of W) 401.35 712 T
(oods7, but ) 482.99 712 T
(was prohibited from remembering any past inputs or outputs?  Perhaps surprisingly) 72 688 T
(, this calcula-) 471.3 688 T
(tion is dif) 72 664 T
(\336cult.  The reason is that the ambiguity of sensory inputs introduces the possibility of ) 117.77 664 T
-0.27 (loops which can apparently only be avoided by stochastic behavior or elaborate planning.  In fact, ) 72 640 P
-0.33 (the problem of calculating the optimal performance of a memoryless,  sensory-limited system in a ) 72 616 P
-0.37 (Class 2 environment is NP-complete \050Littman 1994\051.  However) 72 592 P
-0.37 (, in the same paper the author goes ) 373.39 592 P
-0.18 (on to use a branch and bound technique to \336nd and prove optimal a memoryless policy\321in ef) 72 568 P
-0.18 (fect ) 519.21 568 P
-0.14 (a set of classi\336ers\321which achieves a performance of 3.10 steps in W) 72 544 P
-0.14 (oods7, leaving learning clas-) 402.53 544 P
(si\336er systems like ZCS appreciable room for improvement.) 72 520 T
3 F
(4.   ZCS and Q-learning) 72 484.67 T
1 F
(The performance and reinforcement cycles of ZCS have strong resemblances to Q-learning ) 90 458 T
(\050W) 72 434 T
(atkins 1989\051, perhaps the most widely used reinforcement learning algorithm.  T) 86.36 434 T
(o see the con-) 471.58 434 T
(nection it is helpful to return to \0501\051 and rewrite it in Schwartz\325) 72 410 T
(s \0501993\051 notation using the update ) 368.46 410 T
(operator  ) 72 386 T
(  de\336ned for scalar variables ) 141.29 386 T
2 F
(x) 279.84 386 T
1 F
( and ) 285.17 386 T
2 F
(y) 308.48 386 T
1 F
( by) 313.8 386 T
5 F
( ) 370.18 348.82 T
1 F
(Note that  ) 72 301.82 T
(    is just the W) 149.63 301.82 T
(idrow-Hof) 221.45 301.82 T
(f \0501960\051 learning procedure, where ) 271.86 301.82 T
2 F
(x) 442.37 301.82 T
1 F
( is corrected at ) 447.69 301.82 T
(learning rate ) 72 277.82 T
6 F
(b) 135.28 277.82 T
1 F
( by an error ) 141.86 277.82 T
2 F
(y-x) 200.47 277.82 T
1 F
(.  In terms of ) 215.12 277.82 T
(  expression \0501\051 can be written) 311.74 277.82 T
5 F
(\0502\051) 528.35 241.78 T
1 F
-0.23 (which says that the reinforcement cycle adjusts the total strength of each action set to estimate im-) 72 213 P
(mediate reward plus the discounted strength of the succeeding action set.) 72 189 T
(In Q-learning, an evaluation function estimate ) 90 159 T
2 F
( ) 356.56 159 T
1 F
( is updated at each time-step. Here ) 359.55 159 T
2 F
(x) 528.09 159 T
1 F
( ) 533.41 159 T
-0.06 (represents the current sensory input and ) 72 135 P
2 F
-0.06 (a) 265.49 135 P
1 F
-0.06 ( represents an output action from the set of available ac-) 271.48 135 P
(tions, A.  The update operation can be written) 72 111 T
117.96 382 141.29 399.33 C
117.96 382 141.29 399.33 R
7 X
0 K
V
122.83 382.46 119.29 386 122.83 389.54 121.54 386 4 Y
0 X
V
135.29 386 121.3 386 2 L
1 H
2 Z
N
8 F
(b) 125.29 390.67 T
0 0 612 792 C
241.82 343.83 370.19 364 C
2 F
0 X
0 K
(x) 242.82 348.82 T
(y) 265.98 348.82 T
6 F
(\254) 251.14 348.82 T
2 F
(x) 283.89 348.82 T
(x) 307.05 348.82 T
6 F
(b) 324.96 348.82 T
2 F
(y) 339.35 348.82 T
(x) 357.26 348.82 T
6 F
(-) 347.67 348.82 T
(\050) 334.25 348.82 T
(\051) 363.19 348.82 T
(+) 315.37 348.82 T
(\254) 292.21 348.82 T
(\272) 274.3 348.82 T
8 F
(b) 256.67 356.34 T
0 0 612 792 C
122.3 301.82 149.63 323.82 C
122.3 301.82 149.63 323.82 R
7 X
0 K
V
131.5 303.63 127.97 307.16 131.5 310.7 130.22 307.16 4 Y
0 X
V
143.97 307.16 129.98 307.16 2 L
1 H
2 Z
N
8 F
(b) 133.97 311.83 T
0 0 612 792 C
279.74 277.82 311.74 298.49 C
279.74 277.82 311.74 298.49 R
7 X
0 K
V
291.27 279.96 287.74 283.5 291.27 287.03 289.99 283.5 4 Y
0 X
V
303.74 283.5 289.75 283.5 2 L
1 H
2 Z
N
8 F
(b) 293.74 288.16 T
0 0 612 792 C
242.77 233 357.58 255.82 C
2 F
0 X
0 K
(S) 243.77 241.78 T
5 F
(A) 256.18 237.33 T
8 F
([) 251.89 237.33 T
(]) 263.86 237.33 T
2 F
(r) 286.7 241.78 T
7 F
(i) 291.82 237.31 T
(m) 295.19 237.31 T
(m) 302.99 237.31 T
6 F
(g) 322.8 241.78 T
2 F
(S) 328.43 241.78 T
5 F
(A) 340.85 237.33 T
8 F
([) 336.55 237.33 T
(]) 348.53 237.33 T
(\242) 354.11 237.33 T
6 F
(+) 313.21 241.78 T
(\254) 271.86 241.78 T
8 F
(b) 276 248.17 T
0 0 612 792 C
314.17 154.01 356.56 172.05 C
2 F
0 X
0 K
(Q) 315.17 159 T
1 F
(\366) 317.5 161.67 T
2 F
(x) 331.64 159 T
(a) 342.96 159 T
6 F
(,) 336.96 159 T
(\050) 326.53 159 T
(\051) 349.56 159 T
0 0 612 792 C
FMENDPAGE
%%EndPage: "15" 14
4 11 /Times-Bold FMDEFINEFONT
9 11 /Times-Roman FMDEFINEFONT
%%Page: "14" 14
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(14) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 54 540 414 R
V
1 F
0 X
-0.22 (for somewhat dif) 72 406 P
-0.22 (ferent reasons in the two cases.  In W) 153.29 406 P
-0.22 (oods1, it was due to path habits; with better ) 330.09 406 P
(exploration, ZCS might well have reached the absolute optimum, since W) 72 382 T
(oods1 is a Class 1 envi-) 426.14 382 T
-0.02 (ronment and the absolute optimum is achievable by a memoryless system.  In W) 72 358 P
-0.02 (oods7, perfor-) 457.23 358 P
(mance was probably also limited because W) 72 334 T
(oods7 is Class 2, and thus can\325) 284.21 334 T
(t be \322solved\323 without ) 431.57 334 T
(temporary memory \050or more elaborate sensors\051.  Qualitatively) 72 310 T
(, ZCS exhibits considerable drive ) 368.99 310 T
-0.05 (toward food in W) 72 286 P
-0.05 (oods7: when non-blank objects enter its sensory \336eld, it either takes food imme-) 155.83 286 P
(diately if adjacent, or tends to move around a rock to get the food on the other side as though it ) 72 262 T
(\322knows it\325) 72 238 T
(s there\323.   When surrounded by blanks, ZCS tends to drift in a general direction which ) 121.64 238 T
-0.33 (is maintained through several problems \050for an explanation, see Clif) 72 214 P
-0.33 (f & Bullock 1993\051.  However) 395.24 214 P
-0.33 (, ) 534.34 214 P
(upon encountering a rock, or rock pair) 72 190 T
(, ZCS sometimes goes the long way around to reach food, ) 255.7 190 T
(or may even bang the rock, showing a residual uncertainty apparently because with its lack of ) 72 166 T
(temporary memory  it can\325) 72 142 T
(t resolve which of two or more situations it is actually facing.  W) 200.35 142 T
(e be-) 511.19 142 T
(lieve the shortfall in performance is due at least in part to this inevitable uncertainty in W) 72 118 T
(oods7, ) 499.41 118 T
(and not solely to the formation of path habits. ) 72 94 T
-0.33 (Ideally) 90 64 P
-0.33 (, in judging ZCS\325) 122.53 64 P
-0.33 (s performance we would like to compare it with an optimal temporary ) 204.85 64 P
72 432 540 720 C
72 432 540 720 R
7 X
0 K
V
0 0 0 387 246.5 675.13 437.75 -10.63 409.62 FMBEGINEPSF
%%BeginDocument: /home/wilson/texts/articles/zcs/w7.1.eps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 387.000000 246.500000
%%Creator: TempleGraph 2.4, Origin: /home/wilson@smith
%%CreationDate: Tue Feb 15 14:42:13 1994
%%EndComments
%%DocumentFonts: Times-Roman

/reencodedict 12 dict def
/ReEncode
 { reencodedict begin
  /newcodesandnames exch def
  /newfontname exch def
  /basefontname exch def
  /basefontdict basefontname findfont def
  /newfont basefontdict maxlength dict def
  basefontdict
   { exch dup /FID ne
    { dup /Encoding eq
     { exch dup length array copy newfont 3 1 roll put }
     { exch newfont 3 1 roll put }
    ifelse }
    { pop pop }
   ifelse
  } forall
 newfont /FontName newfontname put
  0 1 newcodesandnames length 1 sub
  { dup newfont /Encoding get 3 1 roll newcodesandnames exch get put}
  for
 newfontname newfont definefont pop
 end
} def


/ExtEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quoteright /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /quoteleft /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quotesingle /grave /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def

/Times-Roman /Times-Roman-Ext ExtEncoding ReEncode
0. setgray
0 246.000000 translate
0.500000 -0.500000 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
318 395 moveto
1 -1 scale
(Problems \(1000s\)) show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [15.000000 0 0 15.000000 0 0] makefont setfont
207 298 moveto
1 -1 scale
90.0 rotate
(Steps to Food) show
-90.0 rotate
1 -1 scale
/Times-Roman-Ext findfont [15.000000 0 0 15.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [15.000000 0 0 15.000000 0 0] makefont setfont
1 setlinewidth
newpath
491 358 moveto
491 152 lineto
244 152 lineto
244 358 lineto
491 358 lineto
closepath
stroke
gsave
newpath
244 358 moveto
244 152 lineto
491 152 lineto
491 358 lineto
244 358 moveto
clip
[2] 0 setdash
1.5 setlinewidth
newpath
246.47 175.088 moveto
248.94 218.546 lineto
251.41 225.764 lineto
253.88 246.068 lineto
256.35 247.123 lineto
258.82 241.684 lineto
261.29 276.259 lineto
263.76 266.108 lineto
266.23 285.636 lineto
268.7 282.917 lineto
271.17 282.505 lineto
273.64 281.319 lineto
276.11 295.392 lineto
278.58 276.754 lineto
281.05 285.719 lineto
283.52 294.189 lineto
285.99 301.325 lineto
288.46 300.814 lineto
290.93 297.123 lineto
293.4 306.879 lineto
295.87 303.715 lineto
298.34 307.621 lineto
300.81 305.857 lineto
303.28 309.302 lineto
305.75 303.649 lineto
308.22 307.093 lineto
310.69 302.611 lineto
313.16 294.7 lineto
315.63 306.994 lineto
318.1 306.434 lineto
320.57 300.221 lineto
323.04 304.967 lineto
325.51 308.197 lineto
327.98 308.395 lineto
330.45 308.461 lineto
332.92 307.39 lineto
335.39 309.532 lineto
337.86 306.467 lineto
340.33 309.153 lineto
342.8 312.186 lineto
345.27 308.329 lineto
347.74 307.522 lineto
350.21 309.17 lineto
352.68 303.122 lineto
355.15 302.66 lineto
357.62 309.071 lineto
360.09 311.905 lineto
362.56 308.428 lineto
365.03 309.005 lineto
367.5 311.197 lineto
369.97 312.235 lineto
372.44 314.46 lineto
374.91 313.768 lineto
377.38 312.746 lineto
379.85 311.345 lineto
382.32 310.768 lineto
384.79 314.855 lineto
387.26 313.422 lineto
389.73 312.301 lineto
392.2 310.307 lineto
394.67 317.937 lineto
397.14 317.344 lineto
399.61 310.571 lineto
402.08 311.79 lineto
404.55 315.861 lineto
407.02 316.355 lineto
409.49 311.971 lineto
411.96 314.114 lineto
414.43 318.695 lineto
416.9 312.944 lineto
419.37 308.758 lineto
421.84 306.368 lineto
424.31 315.844 lineto
426.78 314.246 lineto
429.25 313.801 lineto
431.72 311.543 lineto
434.19 318.118 lineto
436.66 311.84 lineto
439.13 316.404 lineto
441.6 314.707 lineto
444.07 314.971 lineto
446.54 311.774 lineto
449.01 313.438 lineto
451.48 314.921 lineto
453.95 317.459 lineto
456.42 318.448 lineto
458.89 312.812 lineto
461.36 315.251 lineto
463.83 310.439 lineto
466.3 310.257 lineto
468.77 309.285 lineto
471.24 317.706 lineto
473.71 317.97 lineto
476.18 316.322 lineto
478.65 319.42 lineto
481.12 320.656 lineto
483.59 316.948 lineto
486.06 316.042 lineto
488.53 312.894 lineto
491 310.966 lineto
stroke
[] 0 setdash
1 setlinewidth
newpath
246.47 141.041 moveto
248.94 230.577 lineto
251.41 249.562 lineto
253.88 247.304 lineto
256.35 264.624 lineto
258.82 273.474 lineto
261.29 273.589 lineto
263.76 274.776 lineto
266.23 270.508 lineto
268.7 283.016 lineto
271.17 284.73 lineto
273.64 286.246 lineto
276.11 296.134 lineto
278.58 285.735 lineto
281.05 296.826 lineto
283.52 294.387 lineto
285.99 295.673 lineto
288.46 295.673 lineto
290.93 303.501 lineto
293.4 302.479 lineto
295.87 305.709 lineto
298.34 306.912 lineto
300.81 299.298 lineto
303.28 300.633 lineto
305.75 307.027 lineto
308.22 301.325 lineto
310.69 304.275 lineto
313.16 309.516 lineto
315.63 306.302 lineto
318.1 315.218 lineto
320.57 309.516 lineto
323.04 310.027 lineto
325.51 314.921 lineto
327.98 315.053 lineto
330.45 311.114 lineto
332.92 308.132 lineto
335.39 313.108 lineto
337.86 315.004 lineto
340.33 313.422 lineto
342.8 314.015 lineto
345.27 309.532 lineto
347.74 316.339 lineto
350.21 312.252 lineto
352.68 313.323 lineto
355.15 312.202 lineto
357.62 316.355 lineto
360.09 317.047 lineto
362.56 317.377 lineto
365.03 315.218 lineto
367.5 310.422 lineto
369.97 315.317 lineto
372.44 316.849 lineto
374.91 319.915 lineto
377.38 317.509 lineto
379.85 304.852 lineto
382.32 309.4 lineto
384.79 310.406 lineto
387.26 314.806 lineto
389.73 314.41 lineto
392.2 312.729 lineto
394.67 310.686 lineto
397.14 318.464 lineto
399.61 314.575 lineto
402.08 314.163 lineto
404.55 313.702 lineto
407.02 310.208 lineto
409.49 311.048 lineto
411.96 315.498 lineto
414.43 317.064 lineto
416.9 314.954 lineto
419.37 316.174 lineto
421.84 316.586 lineto
424.31 316.157 lineto
426.78 313.356 lineto
429.25 315.663 lineto
431.72 318.135 lineto
434.19 314.13 lineto
436.66 315.663 lineto
439.13 311.246 lineto
441.6 317.509 lineto
444.07 319.305 lineto
446.54 319.239 lineto
449.01 319.173 lineto
451.48 322.403 lineto
453.95 317.443 lineto
456.42 320.063 lineto
458.89 321.25 lineto
461.36 317.014 lineto
463.83 318.794 lineto
466.3 321.085 lineto
468.77 321.019 lineto
471.24 318.893 lineto
473.71 318.942 lineto
476.18 319.766 lineto
478.65 314.625 lineto
481.12 315.663 lineto
483.59 320.607 lineto
486.06 321.728 lineto
488.53 317.624 lineto
491 318.448 lineto
stroke
[6 2] 0 setdash
.5 setlinewidth
newpath
246.47 339.872 moveto
248.94 339.872 lineto
251.41 339.872 lineto
253.88 339.872 lineto
256.35 339.872 lineto
258.82 339.872 lineto
261.29 339.872 lineto
263.76 339.872 lineto
266.23 339.872 lineto
268.7 339.872 lineto
271.17 339.872 lineto
273.64 339.872 lineto
276.11 339.872 lineto
278.58 339.872 lineto
281.05 339.872 lineto
283.52 339.872 lineto
285.99 339.872 lineto
288.46 339.872 lineto
290.93 339.872 lineto
293.4 339.872 lineto
295.87 339.872 lineto
298.34 339.872 lineto
300.81 339.872 lineto
303.28 339.872 lineto
305.75 339.872 lineto
308.22 339.872 lineto
310.69 339.872 lineto
313.16 339.872 lineto
315.63 339.872 lineto
318.1 339.872 lineto
320.57 339.872 lineto
323.04 339.872 lineto
325.51 339.872 lineto
327.98 339.872 lineto
330.45 339.872 lineto
332.92 339.872 lineto
335.39 339.872 lineto
337.86 339.872 lineto
340.33 339.872 lineto
342.8 339.872 lineto
345.27 339.872 lineto
347.74 339.872 lineto
350.21 339.872 lineto
352.68 339.872 lineto
355.15 339.872 lineto
357.62 339.872 lineto
360.09 339.872 lineto
362.56 339.872 lineto
365.03 339.872 lineto
367.5 339.872 lineto
369.97 339.872 lineto
372.44 339.872 lineto
374.91 339.872 lineto
377.38 339.872 lineto
379.85 339.872 lineto
382.32 339.872 lineto
384.79 339.872 lineto
387.26 339.872 lineto
389.73 339.872 lineto
392.2 339.872 lineto
394.67 339.872 lineto
397.14 339.872 lineto
399.61 339.872 lineto
402.08 339.872 lineto
404.55 339.872 lineto
407.02 339.872 lineto
409.49 339.872 lineto
411.96 339.872 lineto
414.43 339.872 lineto
416.9 339.872 lineto
419.37 339.872 lineto
421.84 339.872 lineto
424.31 339.872 lineto
426.78 339.872 lineto
429.25 339.872 lineto
431.72 339.872 lineto
434.19 339.872 lineto
436.66 339.872 lineto
439.13 339.872 lineto
441.6 339.872 lineto
444.07 339.872 lineto
446.54 339.872 lineto
449.01 339.872 lineto
451.48 339.872 lineto
453.95 339.872 lineto
456.42 339.872 lineto
458.89 339.872 lineto
461.36 339.872 lineto
463.83 339.872 lineto
466.3 339.872 lineto
468.77 339.872 lineto
471.24 339.872 lineto
473.71 339.872 lineto
476.18 339.872 lineto
478.65 339.872 lineto
481.12 339.872 lineto
483.59 339.872 lineto
486.06 339.872 lineto
488.53 339.872 lineto
491 339.872 lineto
stroke
grestore
1 setlinewidth
[] 0 setdash
newpath
244 358 moveto
491 358 lineto
stroke
[] 0 setdash
.5 setlinewidth
newpath
244 358 moveto
244 351 lineto
stroke
newpath
293.4 358 moveto
293.4 351 lineto
stroke
newpath
342.8 358 moveto
342.8 351 lineto
stroke
newpath
392.2 358 moveto
392.2 351 lineto
stroke
newpath
441.6 358 moveto
441.6 351 lineto
stroke
newpath
491 358 moveto
491 351 lineto
stroke
newpath
244 358 moveto
244 351 lineto
stroke
newpath
293.4 358 moveto
293.4 351 lineto
stroke
newpath
342.8 358 moveto
342.8 351 lineto
stroke
newpath
392.2 358 moveto
392.2 351 lineto
stroke
newpath
441.6 358 moveto
441.6 351 lineto
stroke
newpath
491 358 moveto
491 351 lineto
stroke
newpath
244 152 moveto
244 159 lineto
stroke
newpath
293.4 152 moveto
293.4 159 lineto
stroke
newpath
342.8 152 moveto
342.8 159 lineto
stroke
newpath
392.2 152 moveto
392.2 159 lineto
stroke
newpath
441.6 152 moveto
441.6 159 lineto
stroke
newpath
491 152 moveto
491 159 lineto
stroke
newpath
244 358 moveto
244 354 lineto
stroke
newpath
268.7 358 moveto
268.7 354 lineto
stroke
newpath
293.4 358 moveto
293.4 354 lineto
stroke
newpath
244 358 moveto
244 354 lineto
stroke
newpath
268.7 358 moveto
268.7 354 lineto
stroke
newpath
293.4 358 moveto
293.4 354 lineto
stroke
newpath
244 152 moveto
244 156 lineto
stroke
newpath
268.7 152 moveto
268.7 156 lineto
stroke
newpath
293.4 152 moveto
293.4 156 lineto
stroke
newpath
293.4 358 moveto
293.4 354 lineto
stroke
newpath
318.1 358 moveto
318.1 354 lineto
stroke
newpath
342.8 358 moveto
342.8 354 lineto
stroke
newpath
293.4 358 moveto
293.4 354 lineto
stroke
newpath
318.1 358 moveto
318.1 354 lineto
stroke
newpath
342.8 358 moveto
342.8 354 lineto
stroke
newpath
293.4 152 moveto
293.4 156 lineto
stroke
newpath
318.1 152 moveto
318.1 156 lineto
stroke
newpath
342.8 152 moveto
342.8 156 lineto
stroke
newpath
342.8 358 moveto
342.8 354 lineto
stroke
newpath
367.5 358 moveto
367.5 354 lineto
stroke
newpath
392.2 358 moveto
392.2 354 lineto
stroke
newpath
342.8 358 moveto
342.8 354 lineto
stroke
newpath
367.5 358 moveto
367.5 354 lineto
stroke
newpath
392.2 358 moveto
392.2 354 lineto
stroke
newpath
342.8 152 moveto
342.8 156 lineto
stroke
newpath
367.5 152 moveto
367.5 156 lineto
stroke
newpath
392.2 152 moveto
392.2 156 lineto
stroke
newpath
392.2 358 moveto
392.2 354 lineto
stroke
newpath
416.9 358 moveto
416.9 354 lineto
stroke
newpath
441.6 358 moveto
441.6 354 lineto
stroke
newpath
392.2 358 moveto
392.2 354 lineto
stroke
newpath
416.9 358 moveto
416.9 354 lineto
stroke
newpath
441.6 358 moveto
441.6 354 lineto
stroke
newpath
392.2 152 moveto
392.2 156 lineto
stroke
newpath
416.9 152 moveto
416.9 156 lineto
stroke
newpath
441.6 152 moveto
441.6 156 lineto
stroke
newpath
441.6 358 moveto
441.6 354 lineto
stroke
newpath
466.3 358 moveto
466.3 354 lineto
stroke
newpath
491 358 moveto
491 354 lineto
stroke
newpath
441.6 358 moveto
441.6 354 lineto
stroke
newpath
466.3 358 moveto
466.3 354 lineto
stroke
newpath
491 358 moveto
491 354 lineto
stroke
newpath
441.6 152 moveto
441.6 156 lineto
stroke
newpath
466.3 152 moveto
466.3 156 lineto
stroke
newpath
491 152 moveto
491 156 lineto
stroke
1 setlinewidth
[] 0 setdash
newpath
244 358 moveto
244 152 lineto
stroke
[] 0 setdash
.5 setlinewidth
newpath
244 358 moveto
251 358 lineto
stroke
newpath
244 316.8 moveto
251 316.8 lineto
stroke
newpath
244 275.6 moveto
251 275.6 lineto
stroke
newpath
244 234.4 moveto
251 234.4 lineto
stroke
newpath
244 193.2 moveto
251 193.2 lineto
stroke
newpath
244 152 moveto
251 152 lineto
stroke
newpath
244 358 moveto
251 358 lineto
stroke
newpath
244 316.8 moveto
251 316.8 lineto
stroke
newpath
244 275.6 moveto
251 275.6 lineto
stroke
newpath
244 234.4 moveto
251 234.4 lineto
stroke
newpath
244 193.2 moveto
251 193.2 lineto
stroke
newpath
244 152 moveto
251 152 lineto
stroke
newpath
491 358 moveto
484 358 lineto
stroke
newpath
491 316.8 moveto
484 316.8 lineto
stroke
newpath
491 275.6 moveto
484 275.6 lineto
stroke
newpath
491 234.4 moveto
484 234.4 lineto
stroke
newpath
491 193.2 moveto
484 193.2 lineto
stroke
newpath
491 152 moveto
484 152 lineto
stroke
240.5 376 moveto
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
(0)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
289.9 376 moveto
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
(2)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
339.3 376 moveto
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
(4)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
388.7 376 moveto
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
(6)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
438.1 376 moveto
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
(8)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
484 376 moveto
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
(10)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
227 363 moveto
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
(0)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
227 321.8 moveto
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
(5)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
220 280.6 moveto
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
(10)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
220 239.4 moveto
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
(15)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
220 198.2 moveto
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
(20)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
220 157 moveto
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
(25)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [20.000000 0 0 20.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
newpath
428 236 moveto
428 189 lineto
504 189 lineto
504 236 lineto
428 236 lineto
closepath
currentgray 1.0 setgray
fill
setgray
[] 0 setdash
1 setlinewidth
newpath
504 236 moveto
504 189 lineto
428 189 lineto
428 236 lineto
504 236 lineto
closepath
stroke
.867469 setlinewidth
[2] 0 setdash
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
newpath
430 205 moveto
0
(Discounted BB) stringwidth pop add
430 add
205 lineto
stroke
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
430 201 moveto
1 -1 scale
(Discounted BB) show
1 -1 scale
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
.578313 setlinewidth
[] 0 setdash
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
newpath
430 219 moveto
0
(QBB) stringwidth pop add
430 add
219 lineto
stroke
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
430 215 moveto
1 -1 scale
(QBB) show
1 -1 scale
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
.289156 setlinewidth
[6 2] 0 setdash
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
newpath
430 233 moveto
0
(Abs. Optimum) stringwidth pop add
430 add
233 lineto
stroke
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
430 229 moveto
1 -1 scale
(Abs. Optimum) show
1 -1 scale
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
showpage

%%EndDocument
FMENDEPSF
105.88 437.62 510.88 482.62 R
V
4 F
0 X
0.27 (Figure 6) 105.88 475.29 P
9 F
0.27 (.  Performance in Woods7.  Dotted curve, discounted bucket brigade of equation 1) 145.51 475.29 P
0.29 (\050or 2\051; solid curve, Q-like bucket brigade of equation 4 \050Section 4\051;  dashed curve, absolute) 105.88 462.29 P
(optimum.  Parameters the same as in Figure 3.  Curves are averages of 10 runs.) 105.88 449.29 T
0 0 612 792 C
FMENDPAGE
%%EndPage: "14" 13
10 10 /Courier FMDEFINEFONT
%%Page: "13" 13
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(13) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 48.38 540 441 R
V
1 F
0 X
-0.38 (this holds for W) 72 433 P
-0.38 (oods1 but not for W) 147.52 433 P
-0.38 (oods7.  Stated somewhat dif) 241.64 433 P
-0.38 (ferently) 375.49 433 P
-0.38 (, to know one\325) 412.01 433 P
-0.38 (s position in ) 479.49 433 P
(W) 72 409 T
(oods1 \050with respect to the basic con\336guration\051, it is suf) 82.36 409 T
(\336cient to know the current input.  In ) 345.98 409 T
-0.06 (W) 72 385 P
-0.06 (oods7, however) 82.36 385 P
-0.06 (,  it is necessary either to see more than one step away) 157.76 385 P
-0.06 (, or to remember some re-) 415.73 385 P
(cent sensory inputs.  Since ZCS has no temporary memory) 72 361 T
(, and its view in these experiments is ) 353.04 361 T
(limited to adjacent cells, ZCS cannot in general be expected to gain food in W) 72 337 T
(oods7 at the rate ) 446.45 337 T
(possible for a system without these restrictions \050Littman 1993\051.  However) 72 313 T
(, it is still of interest to ) 424.95 313 T
(see how well ZCS can do.) 72 289 T
-0.02 (A simple routine which marks every open cell with its minimum distance from food and then ) 90 259 P
(averages the distances reveals that the absolute optimum performance \050again de\336ned as the best ) 72 235 T
(possible performance of a creature having arbitrary memory and sensory capability\051  under the ) 72 211 T
(random restart regime is 2.2 steps in W) 72 187 T
(oods7.  On the other hand, moving randomly until food is ) 259.58 187 T
-0.25 (encountered averages 41 steps.  ZCS\325) 72 163 P
-0.25 (s performance as shown by the two upper curves in Figure 6 ) 250.6 163 P
-0.17 (is about 5 steps after a few thousand problems) 72 139 P
5 F
-0.14 (1) 292.48 143.8 P
1 F
-0.17 (.  Thus here, as in W) 297.48 139 P
-0.17 (oods1, ZCS is very good with ) 394.76 139 P
(respect to random, but still about twice the absolute optimum. However) 72 115 T
(, ZCS\325) 415.3 115 T
(s shortfall may be ) 446.63 115 T
72 72.38 540 87.35 C
72 72.38 540 87.35 R
7 X
0 K
V
81 85.34 225 85.34 2 L
V
0.5 H
2 Z
0 X
N
0 0 612 792 C
5 F
0 X
0 K
0.41 (1. For comparison, the original animat\325s \050Wilson 1985\051 performance on Woods7 was asymptotically about) 90 65.71 P
(equal to ZCS\325s, but it learned faster due to its look-ahead classifier creation heuristic.) 90 53.71 T
71.38 456.12 539.38 731.25 C
71.38 456.12 539.38 731.25 R
7 X
0 K
V
88.25 495 523.75 718.75 R
V
10 F
0 X
(...........O.........................OO.........O.........) 149.45 712.08 T
(.OFO.......F........F.........O.......F.........FO........) 149.45 700.08 T
(...........O........OO.......F............................) 149.45 688.08 T
(............................O......O.........F......O.....) 149.45 676.08 T
(...F.......OFO........OFO..........F.........OO......F....) 149.45 664.08 T
(...OO..............................O..................O...) 149.45 652.08 T
(..........OO.......O........OO....................O.......) 149.45 640.08 T
(.OFO.......F.......OF........F.........OFO........F.......) 149.45 628.08 T
(..................................................O.......) 149.45 616.08 T
(...OO.......O.................O........OO.......O.........) 149.45 604.08 T
(...F.......F.......O.........FO........F........OF....OFO.) 149.45 592.08 T
(...........O.......OF.....................................) 149.45 580.08 T
(..O......................O............O......O.......O....) 149.45 568.08 T
(..F.......F...............F..........FO.......F......OF...) 149.45 556.08 T
(..O.......OO...............O...................O..........) 149.45 544.08 T
(.....................O.....................O..............) 149.45 532.08 T
(...F........OFO......F..........F.........F......OF.......) 149.45 520.08 T
(...OO................O..........OO.......O.......O........) 149.45 508.08 T
105.5 464.88 501.5 478.25 R
7 X
V
4 F
0 X
(Figure 5) 105.5 470.92 T
9 F
(.  Environment Woods7.) 144.86 470.92 T
0 0 612 792 C
FMENDPAGE
%%EndPage: "13" 12
11 18 /Times-Roman FMDEFINEFONT
%%Page: "12" 12
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(12) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 63 540 441 R
V
1 F
0 X
(on.  Thus the system tends toward \322path habits\323 \050W) 72 433 T
(atkins 1993\051\321trajectories that due to local ) 318.87 433 T
(payof) 72 409 T
(fs and incomplete exploration, are sub-optimal.  The present example is particularly clear) 99.09 409 T
(, ) 526.96 409 T
(but the ef) 72 385 T
(fect has been observed to some degree in many experiments.  The tendency to path hab-) 117.08 385 T
-0.13 (its may be a consequence at least in part of the exploration/exploitation tradeof) 72 361 P
-0.13 (f implicit in the ac-) 448.59 361 P
(tion-selection and reinforcement regimes. In particular) 72 337 T
(, a lar) 333.31 337 T
(ge value of ) 360.07 337 T
6 F
(t) 416.36 337 T
1 F
( causes any reasonably ) 421.62 337 T
-0.05 (good move to quickly dominate [M] and tends to prevent its being replaced by a better one.  This ) 72 313 P
(may be desirable for fast learning, but can limit maximum performance, as observed here in ) 72 289 T
(W) 72 265 T
(oods1.  ) 82.36 265 T
-0.3 (ZCS was tested in a second environment, W) 90 235 P
-0.3 (oods7, shown in Figure 5 \050the top and bottom edg-) 299.48 235 P
(es of W) 72 211 T
(oods7 are connected, as are the left and right edges\051.  Though they have the same object ) 108.34 211 T
(types, the two environments dif) 72 187 T
(fer fundamentally in that, viewed as a \336nite state machine taking ) 223.36 187 T
(inputs \050actions\051 and producing outputs \050sensations and rewards\051, W) 72 163 T
(oods1 is Markovian with de-) 394.48 163 T
-0.17 (layed rewards.  W) 72 139 P
-0.17 (oods7, on the other hand, is non-Markovian with delayed rewards.  In the termi-) 157.79 139 P
(nology of W) 72 115 T
(ilson \0501991\051, they are Class 1 and Class 2 environments, respectively) 132.15 115 T
(.  The ) 462.48 115 T
-0.18 (Markovian property means in this context that given any sensory input ) 72 91 P
2 F
-0.18 (x) 412.16 91 P
1 F
-0.18 (, the sensory input ) 417.48 91 P
2 F
-0.18 (y) 507.72 91 P
1 F
-0.18 ( \050and ) 513.04 91 P
(the reward\051 resulting from taking an action ) 72 67 T
2 F
(a) 280.84 67 T
1 F
( is always exactly predictable.  Inspection will show ) 286.84 67 T
72 452.5 540 720 C
72 452.5 540 720 R
7 X
0 K
V
108.62 480.25 504.62 498.25 R
V
4 F
0 X
(Figure 4) 108.62 490.92 T
9 F
(.  Example of predominant learned move directions in Woods1.) 147.99 490.92 T
234.38 519.5 388.75 675.75 C
234.38 519.5 388.75 675.75 R
7 X
0 K
V
0 X
%%BeginBinary:  3926     
298 302 214.56 217.44 0 204.91 488.28
/red <
00FF00FF00FF00FF000000000000000000000000000000000000000000000000
000810192129313A424A525B636B737C848C949DA5ADB5BEC6CED6DFE7EF00FF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000E0FFFF000000FF00FF
> store
/green <
00FF00F300F000F0000000000000000000000000000000000000000000000000
000810192129313A424A525B636B737C848C949DA5ADB5BEC6CED6DFE7EF00FF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000E000FFFF00FF0000FF
> store
/blue <
00FF00D700DC00DC000000000000000000000000000000000000000000000000
000810192129313A424A525B636B737C848C949DA5ADB5BEC6CED6DFE7EF00FF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000E0FF00FFFF000000FF
> store
 BEGINBITMAPCOLORc
>"J"J"J"J"J"J"J"
80G80G80G80G80G80G80G80







z
T680S"Z"Z"Z"Z"Z"Z"Z"T
80G80G80G80G80G80G80G80





































z
T680S"Z"Z"Z"Z"Z"Z"Z"T
80G80G80G80G80G80G80G80
















J"J"
R#80G80J"J"J"J#J#
O680G80G80FFF80FFF80J#J#J#J#J"
O6FF80FFF80FFF80E80FFF80J#J#J#J#J#
O7FF80FFF80FFF80C80FFF80FFJ#J#J#J#J#
O8FF80FFF80FFF80A80FFF80FFJ#J#J#J#J#
O9FF80FFF80FFF80?80FFF80FFJ#J#J#J#J#
O:FF80FFF80FFF80=80FFF80FFJ#J#J#J#J#
O;FF80FFF80FFF80;80FFF80FFJ#J#J#J#J#
O<FF80FFF80FFF80980FFF80FFJ#J#J#J#J#<"
O=FF80FFF80FFF80780FFF80FFFFJ#J#J#J#J#
O>FF80FFF80FFF80580FFF80FFJ#J#J#I#J"
O?FF80FFF80FFF8080FFGFFJ#J#J#G#
O@FF80FFF80FFF8080FFJ#J#J#E#
OAFF80FFF80FFF8080FFJ#J#J#C#
OBFF80FFF80FFF8080FFJ#J#J#B"
OCFF80FFF80FFF80FFJ"J"J"
ODFFGFFGFF



z
T680S"Z"Z"Z"Z"Z"Z"Z"T
80G80G80G80G80G80G80G80

















J"J"J"J"J"
O680G80G80G80G80J$J"J"J$
O5808080G80O?80G808080J&J$J#J&
O480FF80FF80EFFFF80O=80FFF80FF80FF80J#9#J#J%J"P
O380FFFF80FFF80O;80FFFFFFD80J#;"J#J#J#
O280FFFFGFF80O980FFF80FFJ#J#J#J#
O180FFO!FF80O780FFF80FFJ#J#J#J#
O080FFO#FF80O580FFF80FFJ#;"J#J#J#
O/80FFFFMFF80O380FFF80FFJ"J#J#J#
O/FFO'FF80O180FFF80FFJ#J#J#
P8FF80O/80FFF80FFJ#J#J#
P9FF80O-80FFF80FFJ#J#J#
P:FF80O+80FFF80FFJ#J#J"
P;FF80O)80FFGFFJ#J#
P<FF80O'80FFJ"J"
P=FFO'FF




z
T680S"Z"Z"Z"Z"Z"Z"Z"T
80G80G80G80G80G80G80G80









J"
RD80J#
RDFF80J#
REFF80J#
RFFF80J#
RGFF80J#
RHFF80J#
RIFF80J#
RJFF80J"J#
R$80FFF80J"J#
R#80G80FFJ"J#
R#FFF80FFJ#
RI80FFJ#
RH80FFJ#
RG80FFJ#
RF80FFJ"
RFFF











z
T680S"Z"Z"Z"Z"Z"Z"Z"T
80G80G80G80G80G80G80G80




J"
QE80J#J"
QEFF80G80J#J#
QFFF80FFF80J#J#
QGFF80FFF80J#J#
QHFF80FFF80J#J#
QIFF80FFF80J#J#
QJFF80FFF80J#J#
QKFF80FFF80J#J#
QLFF80FFF80J#J#
QMFF80FFF80J#J#
R FF80FFF80J#J#
R!FF80FFF80J#J#
R"FF80FFF80J#J#
R#FF80FFF80J#J#
R#80FFF80FFJ"J#
R#FFF80FFJ"
RJFF















z
T680S"Z"Z"Z"Z"Z"Z"Z"T
80G80G80G80G80G80G80G80





J"
R@80J#
R@FF80J#
RAFF80J#
RBFF80J#
RCFF80J#
RDFF80J#
REFF80J#
RFFF80J#
RGFF80J#
RHFF80J#
RIFF80J"J#
R#80FFF80J#J#
R#FF80FFF80J"J#
R#80G80FFJ$J#
R"80FFFFE80FFJ#J"
R!80FFGFFJ#
R 80FFJ#
QM80FFJ#
QL80FFJ#
QK80FFJ#
QJ80FFJ#
QI80FFJ#
QH80FFJ#
QG80FFJ#
QF80FFJ"
QFFF





z
T680S"Z"Z"Z"Z"Z"Z"Z"T
80G80G80G80G80G80G80G80





































z
T680S"Z"Z"Z"Z"Z"Z"Z"T
80G80G80G80G80G80G80G80











ENDBITMAP
%%EndBinary
11 F
(O) 247.5 591.37 T
(O) 276.88 591.37 T
(F) 307.5 591.37 T
(O) 248.13 563.25 T
(O) 277.5 563.87 T
(O) 305.63 563.87 T
(O) 248.75 535.75 T
(O) 277.5 536.37 T
(O) 306.88 536.37 T
72 452.5 540 720 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "12" 11
11 11 /Times-Italic FMDEFINEFONT
12 9 /Times-Roman FMDEFINEFONT
13 9 /Times-Italic FMDEFINEFONT
%%Page: "11" 11
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(1) 306 749.33 T
(1) 310.45 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 54 540 414 R
V
1 F
0 X
(equipped system having the same actions can do better in W) 72 406 T
(oods1.  Thus the performance ) 360.84 406 T
(achieved by ZCS is very good relative to random, but still roughly twice the absolute optimum.) 72 382 T
(The primary reason for the shortfall can be seen in Figure 4, which symbolizes, for each dis-) 90 352 T
(tinct position in W) 72 328 T
(oods1, the probability of each of the eight directions of movement at 10,000 ) 160.67 328 T
-0.14 (problems in a particular run.  The length of a line segment in a cell \050starting at the cell\325) 72 304 P
-0.14 (s center\051 is ) 485.47 304 P
(proportional to the total strength of the [A] for that direction of movement, and so to the move-) 72 280 T
(ment\325) 72 256 T
(s probability) 99.32 256 T
(.  Note that in many cells the most probable movement dominates the others, ) 158.84 256 T
-0.06 (and points toward the F by the shortest path.  An exception is the cell just east of the F) 72 232 P
-0.06 (, where the ) 484.24 232 P
(dominant move direction is south; the system is apparently blind to the fact that food is just one ) 72 208 T
(step west!  A possible explanation is that, early in learning, ZCS found and strengthened the ) 72 184 T
(northwest move in the cell just southeast of F) 72 160 T
(.  This made that cell a source of strong bucket bri-) 288.91 160 T
(gade payof) 72 136 T
(f for any move into it.  Then, if from the cell just east of F the system happened to dis-) 124.74 136 T
(cover a southerly move before one to the west, the former move could well come to dominate ) 72 112 T
([M], even if the latter were later generated by the GA.  Once the path from the cell east of F be-) 72 88 T
-0.21 (came inef) 72 64 P
-0.21 (\336cient, the same inef) 118.53 64 P
-0.21 (\336ciency would be passed up along paths leading to that cell, and so ) 217.61 64 P
72 432 540 729 C
72 432 540 729 R
7 X
0 K
V
0 0 0 387 246.5 682 440.25 -13.25 417.12 FMBEGINEPSF
%%BeginDocument: /home/wilson/texts/articles/zcs/w1.1.eps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 387.000000 246.500000
%%Creator: TempleGraph 2.4, Origin: /home/wilson@smith
%%CreationDate: Tue Feb 15 14:39:47 1994
%%EndComments
%%DocumentFonts: Times-Roman

/reencodedict 12 dict def
/ReEncode
 { reencodedict begin
  /newcodesandnames exch def
  /newfontname exch def
  /basefontname exch def
  /basefontdict basefontname findfont def
  /newfont basefontdict maxlength dict def
  basefontdict
   { exch dup /FID ne
    { dup /Encoding eq
     { exch dup length array copy newfont 3 1 roll put }
     { exch newfont 3 1 roll put }
    ifelse }
    { pop pop }
   ifelse
  } forall
 newfont /FontName newfontname put
  0 1 newcodesandnames length 1 sub
  { dup newfont /Encoding get 3 1 roll newcodesandnames exch get put}
  for
 newfontname newfont definefont pop
 end
} def


/ExtEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quoteright /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /quoteleft /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quotesingle /grave /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def

/Times-Roman /Times-Roman-Ext ExtEncoding ReEncode
0. setgray
0 246.000000 translate
0.500000 -0.500000 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
318 395 moveto
1 -1 scale
(Problems \(1000s\)) show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [15.000000 0 0 15.000000 0 0] makefont setfont
207 298 moveto
1 -1 scale
90.0 rotate
(Steps to Food) show
-90.0 rotate
1 -1 scale
/Times-Roman-Ext findfont [15.000000 0 0 15.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [15.000000 0 0 15.000000 0 0] makefont setfont
1 setlinewidth
newpath
491 358 moveto
491 152 lineto
244 152 lineto
244 358 lineto
491 358 lineto
closepath
stroke
gsave
newpath
244 358 moveto
244 152 lineto
491 152 lineto
491 358 lineto
244 358 moveto
clip
[2] 0 setdash
1.5 setlinewidth
newpath
245.235 242.64 moveto
246.47 307.406 lineto
248.94 317.014 lineto
251.41 321.414 lineto
253.88 315.168 lineto
256.35 320.261 lineto
258.82 323.524 lineto
261.29 323.376 lineto
263.76 323.211 lineto
266.23 323.491 lineto
268.7 325.271 lineto
271.17 322.238 lineto
273.64 325.188 lineto
276.11 324.414 lineto
278.58 326.309 lineto
281.05 326.358 lineto
283.52 326.111 lineto
285.99 325.963 lineto
288.46 326.26 lineto
290.93 328.039 lineto
293.4 327.281 lineto
295.87 327.973 lineto
298.34 328.814 lineto
300.81 328.913 lineto
303.28 327.908 lineto
305.75 328.781 lineto
308.22 328.352 lineto
310.69 328.979 lineto
313.16 328.583 lineto
315.63 329.226 lineto
318.1 328.023 lineto
320.57 328.254 lineto
323.04 330.017 lineto
325.51 329.144 lineto
327.98 329.951 lineto
330.45 330.709 lineto
332.92 329.621 lineto
335.39 329.935 lineto
337.86 330.462 lineto
340.33 328.814 lineto
342.8 329.704 lineto
345.27 328.929 lineto
347.74 330.726 lineto
350.21 329.935 lineto
352.68 330.264 lineto
355.15 330.61 lineto
357.62 330.874 lineto
360.09 331.945 lineto
362.56 331.352 lineto
365.03 330.215 lineto
367.5 330.445 lineto
369.97 330.94 lineto
372.44 330.396 lineto
374.91 331.401 lineto
377.38 330.165 lineto
379.85 330.775 lineto
382.32 331.731 lineto
384.79 330.956 lineto
387.26 329.902 lineto
389.73 330.874 lineto
392.2 330.973 lineto
394.67 331.5 lineto
397.14 331.648 lineto
399.61 330.561 lineto
402.08 331.204 lineto
404.55 331.204 lineto
407.02 331.154 lineto
409.49 332.357 lineto
411.96 331.863 lineto
414.43 331.204 lineto
416.9 331.187 lineto
419.37 331.962 lineto
421.84 331.138 lineto
424.31 332.753 lineto
426.78 331.55 lineto
429.25 330.824 lineto
431.72 331.5 lineto
434.19 332.917 lineto
436.66 331.368 lineto
439.13 332.505 lineto
441.6 331.681 lineto
444.07 332.423 lineto
446.54 331.566 lineto
449.01 332.819 lineto
451.48 331.022 lineto
453.95 333.198 lineto
456.42 332.489 lineto
458.89 331.5 lineto
461.36 332.868 lineto
463.83 332.769 lineto
466.3 332.687 lineto
468.77 333.56 lineto
471.24 331.583 lineto
473.71 333.016 lineto
476.18 332.522 lineto
478.65 332.011 lineto
481.12 333.643 lineto
483.59 332.967 lineto
486.06 333.692 lineto
488.53 333.428 lineto
491 332.538 lineto
stroke
[] 0 setdash
1 setlinewidth
newpath
245.235 275.6 moveto
246.47 321.958 lineto
248.94 327.018 lineto
251.41 328.764 lineto
253.88 328.402 lineto
256.35 328.27 lineto
258.82 327.99 lineto
261.29 328.418 lineto
263.76 328.979 lineto
266.23 329.424 lineto
268.7 329.424 lineto
271.17 329.259 lineto
273.64 330.215 lineto
276.11 328.847 lineto
278.58 329.325 lineto
281.05 330.165 lineto
283.52 329.737 lineto
285.99 329.473 lineto
288.46 330 lineto
290.93 330.874 lineto
293.4 329.358 lineto
295.87 329.111 lineto
298.34 331.632 lineto
300.81 330.594 lineto
303.28 331.072 lineto
305.75 331.583 lineto
308.22 330.528 lineto
310.69 331.714 lineto
313.16 330.94 lineto
315.63 331.863 lineto
318.1 331.154 lineto
320.57 332.95 lineto
323.04 330.347 lineto
325.51 332.044 lineto
327.98 330.017 lineto
330.45 331.533 lineto
332.92 331.747 lineto
335.39 333 lineto
337.86 331.945 lineto
340.33 333.016 lineto
342.8 331.648 lineto
345.27 331.088 lineto
347.74 331.995 lineto
350.21 331.484 lineto
352.68 332.044 lineto
355.15 331.912 lineto
357.62 332.769 lineto
360.09 332.324 lineto
362.56 332.687 lineto
365.03 332.407 lineto
367.5 332.093 lineto
369.97 332.802 lineto
372.44 331.863 lineto
374.91 333.544 lineto
377.38 332.472 lineto
379.85 332.72 lineto
382.32 331.648 lineto
384.79 331.467 lineto
387.26 333.165 lineto
389.73 332.72 lineto
392.2 332.588 lineto
394.67 331.154 lineto
397.14 333.494 lineto
399.61 331.698 lineto
402.08 332.407 lineto
404.55 332.522 lineto
407.02 333.181 lineto
409.49 333.774 lineto
411.96 333.181 lineto
414.43 333.264 lineto
416.9 332.884 lineto
419.37 333.527 lineto
421.84 333.774 lineto
424.31 332.934 lineto
426.78 332.917 lineto
429.25 333.824 lineto
431.72 333.231 lineto
434.19 333.61 lineto
436.66 333.725 lineto
439.13 333.61 lineto
441.6 334.005 lineto
444.07 333.214 lineto
446.54 334.071 lineto
449.01 334.186 lineto
451.48 333.824 lineto
453.95 333.412 lineto
456.42 334.302 lineto
458.89 334.038 lineto
461.36 333.626 lineto
463.83 333.494 lineto
466.3 334.368 lineto
468.77 333.313 lineto
471.24 333.313 lineto
473.71 333.676 lineto
476.18 333.824 lineto
478.65 333.395 lineto
481.12 332.472 lineto
483.59 333.379 lineto
486.06 333.28 lineto
488.53 333.412 lineto
491 332.983 lineto
stroke
[6 2] 0 setdash
.5 setlinewidth
newpath
245.235 344.099 moveto
246.47 344.099 lineto
248.94 344.099 lineto
251.41 344.099 lineto
253.88 344.099 lineto
256.35 344.099 lineto
258.82 344.099 lineto
261.29 344.099 lineto
263.76 344.099 lineto
266.23 344.099 lineto
268.7 344.099 lineto
271.17 344.099 lineto
273.64 344.099 lineto
276.11 344.099 lineto
278.58 344.099 lineto
281.05 344.099 lineto
283.52 344.099 lineto
285.99 344.099 lineto
288.46 344.099 lineto
290.93 344.099 lineto
293.4 344.099 lineto
295.87 344.099 lineto
298.34 344.099 lineto
300.81 344.099 lineto
303.28 344.099 lineto
305.75 344.099 lineto
308.22 344.099 lineto
310.69 344.099 lineto
313.16 344.099 lineto
315.63 344.099 lineto
318.1 344.099 lineto
320.57 344.099 lineto
323.04 344.099 lineto
325.51 344.099 lineto
327.98 344.099 lineto
330.45 344.099 lineto
332.92 344.099 lineto
335.39 344.099 lineto
337.86 344.099 lineto
340.33 344.099 lineto
342.8 344.099 lineto
345.27 344.099 lineto
347.74 344.099 lineto
350.21 344.099 lineto
352.68 344.099 lineto
355.15 344.099 lineto
357.62 344.099 lineto
360.09 344.099 lineto
362.56 344.099 lineto
365.03 344.099 lineto
367.5 344.099 lineto
369.97 344.099 lineto
372.44 344.099 lineto
374.91 344.099 lineto
377.38 344.099 lineto
379.85 344.099 lineto
382.32 344.099 lineto
384.79 344.099 lineto
387.26 344.099 lineto
389.73 344.099 lineto
392.2 344.099 lineto
394.67 344.099 lineto
397.14 344.099 lineto
399.61 344.099 lineto
402.08 344.099 lineto
404.55 344.099 lineto
407.02 344.099 lineto
409.49 344.099 lineto
411.96 344.099 lineto
414.43 344.099 lineto
416.9 344.099 lineto
419.37 344.099 lineto
421.84 344.099 lineto
424.31 344.099 lineto
426.78 344.099 lineto
429.25 344.099 lineto
431.72 344.099 lineto
434.19 344.099 lineto
436.66 344.099 lineto
439.13 344.099 lineto
441.6 344.099 lineto
444.07 344.099 lineto
446.54 344.099 lineto
449.01 344.099 lineto
451.48 344.099 lineto
453.95 344.099 lineto
456.42 344.099 lineto
458.89 344.099 lineto
461.36 344.099 lineto
463.83 344.099 lineto
466.3 344.099 lineto
468.77 344.099 lineto
471.24 344.099 lineto
473.71 344.099 lineto
476.18 344.099 lineto
478.65 344.099 lineto
481.12 344.099 lineto
483.59 344.099 lineto
486.06 344.099 lineto
488.53 344.099 lineto
491 344.099 lineto
stroke
grestore
1 setlinewidth
[] 0 setdash
newpath
244 358 moveto
491 358 lineto
stroke
[] 0 setdash
.5 setlinewidth
newpath
244 358 moveto
244 351 lineto
stroke
newpath
293.4 358 moveto
293.4 351 lineto
stroke
newpath
342.8 358 moveto
342.8 351 lineto
stroke
newpath
392.2 358 moveto
392.2 351 lineto
stroke
newpath
441.6 358 moveto
441.6 351 lineto
stroke
newpath
491 358 moveto
491 351 lineto
stroke
newpath
244 358 moveto
244 351 lineto
stroke
newpath
293.4 358 moveto
293.4 351 lineto
stroke
newpath
342.8 358 moveto
342.8 351 lineto
stroke
newpath
392.2 358 moveto
392.2 351 lineto
stroke
newpath
441.6 358 moveto
441.6 351 lineto
stroke
newpath
491 358 moveto
491 351 lineto
stroke
newpath
244 152 moveto
244 159 lineto
stroke
newpath
293.4 152 moveto
293.4 159 lineto
stroke
newpath
342.8 152 moveto
342.8 159 lineto
stroke
newpath
392.2 152 moveto
392.2 159 lineto
stroke
newpath
441.6 152 moveto
441.6 159 lineto
stroke
newpath
491 152 moveto
491 159 lineto
stroke
newpath
244 358 moveto
244 354 lineto
stroke
newpath
268.7 358 moveto
268.7 354 lineto
stroke
newpath
293.4 358 moveto
293.4 354 lineto
stroke
newpath
244 358 moveto
244 354 lineto
stroke
newpath
268.7 358 moveto
268.7 354 lineto
stroke
newpath
293.4 358 moveto
293.4 354 lineto
stroke
newpath
244 152 moveto
244 156 lineto
stroke
newpath
268.7 152 moveto
268.7 156 lineto
stroke
newpath
293.4 152 moveto
293.4 156 lineto
stroke
newpath
293.4 358 moveto
293.4 354 lineto
stroke
newpath
318.1 358 moveto
318.1 354 lineto
stroke
newpath
342.8 358 moveto
342.8 354 lineto
stroke
newpath
293.4 358 moveto
293.4 354 lineto
stroke
newpath
318.1 358 moveto
318.1 354 lineto
stroke
newpath
342.8 358 moveto
342.8 354 lineto
stroke
newpath
293.4 152 moveto
293.4 156 lineto
stroke
newpath
318.1 152 moveto
318.1 156 lineto
stroke
newpath
342.8 152 moveto
342.8 156 lineto
stroke
newpath
342.8 358 moveto
342.8 354 lineto
stroke
newpath
367.5 358 moveto
367.5 354 lineto
stroke
newpath
392.2 358 moveto
392.2 354 lineto
stroke
newpath
342.8 358 moveto
342.8 354 lineto
stroke
newpath
367.5 358 moveto
367.5 354 lineto
stroke
newpath
392.2 358 moveto
392.2 354 lineto
stroke
newpath
342.8 152 moveto
342.8 156 lineto
stroke
newpath
367.5 152 moveto
367.5 156 lineto
stroke
newpath
392.2 152 moveto
392.2 156 lineto
stroke
newpath
392.2 358 moveto
392.2 354 lineto
stroke
newpath
416.9 358 moveto
416.9 354 lineto
stroke
newpath
441.6 358 moveto
441.6 354 lineto
stroke
newpath
392.2 358 moveto
392.2 354 lineto
stroke
newpath
416.9 358 moveto
416.9 354 lineto
stroke
newpath
441.6 358 moveto
441.6 354 lineto
stroke
newpath
392.2 152 moveto
392.2 156 lineto
stroke
newpath
416.9 152 moveto
416.9 156 lineto
stroke
newpath
441.6 152 moveto
441.6 156 lineto
stroke
newpath
441.6 358 moveto
441.6 354 lineto
stroke
newpath
466.3 358 moveto
466.3 354 lineto
stroke
newpath
491 358 moveto
491 354 lineto
stroke
newpath
441.6 358 moveto
441.6 354 lineto
stroke
newpath
466.3 358 moveto
466.3 354 lineto
stroke
newpath
491 358 moveto
491 354 lineto
stroke
newpath
441.6 152 moveto
441.6 156 lineto
stroke
newpath
466.3 152 moveto
466.3 156 lineto
stroke
newpath
491 152 moveto
491 156 lineto
stroke
1 setlinewidth
[] 0 setdash
newpath
244 358 moveto
244 152 lineto
stroke
[] 0 setdash
.5 setlinewidth
newpath
244 358 moveto
251 358 lineto
stroke
newpath
244 316.8 moveto
251 316.8 lineto
stroke
newpath
244 275.6 moveto
251 275.6 lineto
stroke
newpath
244 234.4 moveto
251 234.4 lineto
stroke
newpath
244 193.2 moveto
251 193.2 lineto
stroke
newpath
244 152 moveto
251 152 lineto
stroke
newpath
244 358 moveto
251 358 lineto
stroke
newpath
244 316.8 moveto
251 316.8 lineto
stroke
newpath
244 275.6 moveto
251 275.6 lineto
stroke
newpath
244 234.4 moveto
251 234.4 lineto
stroke
newpath
244 193.2 moveto
251 193.2 lineto
stroke
newpath
244 152 moveto
251 152 lineto
stroke
newpath
491 358 moveto
484 358 lineto
stroke
newpath
491 316.8 moveto
484 316.8 lineto
stroke
newpath
491 275.6 moveto
484 275.6 lineto
stroke
newpath
491 234.4 moveto
484 234.4 lineto
stroke
newpath
491 193.2 moveto
484 193.2 lineto
stroke
newpath
491 152 moveto
484 152 lineto
stroke
240.5 376 moveto
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
(0)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
289.9 376 moveto
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
(2)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
339.3 376 moveto
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
(4)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
388.7 376 moveto
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
(6)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
438.1 376 moveto
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
(8)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
484 376 moveto
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
(10)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
227 363 moveto
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
(0)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
227 321.8 moveto
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
(5)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
220 280.6 moveto
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
(10)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
220 239.4 moveto
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
(15)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
220 198.2 moveto
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
(20)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
220 157 moveto
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
(25)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [20.000000 0 0 20.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
newpath
428 236 moveto
428 189 lineto
504 189 lineto
504 236 lineto
428 236 lineto
closepath
currentgray 1.0 setgray
fill
setgray
[] 0 setdash
1 setlinewidth
newpath
504 236 moveto
504 189 lineto
428 189 lineto
428 236 lineto
504 236 lineto
closepath
stroke
.867469 setlinewidth
[2] 0 setdash
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
newpath
430 205 moveto
0
(Discounted BB) stringwidth pop add
430 add
205 lineto
stroke
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
430 201 moveto
1 -1 scale
(Discounted BB) show
1 -1 scale
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
.578313 setlinewidth
[] 0 setdash
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
newpath
430 219 moveto
0
(QBB) stringwidth pop add
430 add
219 lineto
stroke
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
430 215 moveto
1 -1 scale
(QBB) show
1 -1 scale
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
.289156 setlinewidth
[6 2] 0 setdash
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
newpath
430 233 moveto
0
(Abs. Optimum) stringwidth pop add
430 add
233 lineto
stroke
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
430 229 moveto
1 -1 scale
(Abs. Optimum) show
1 -1 scale
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [12.000000 0 0 12.000000 0 0] makefont setfont
showpage

%%EndDocument
FMENDEPSF
114.25 435.12 510.25 489.12 R
V
4 F
0 X
0.23 (Figure 3) 114.25 481.79 P
9 F
0.23 (.  Performance in Woods1.  Dotted curve, discounted bucket brigade of equation) 153.85 481.79 P
-0.67 (1 \050or 2\051; solid curve, Q-like bucket brigade of equation 4 \050Section 4\051; dashed curve, absolute) 114.25 468.79 P
-0.15 (optimum.  Parameters: ) 114.25 455.79 P
11 F
-0.15 ( N) 216.34 455.79 P
9 F
-0.15 ( = 400, ) 226.27 455.79 P
11 F
-0.15 (P) 259.48 455.79 P
12 F
-0.12 (#) 266.2 453.04 P
9 F
-0.15 ( = 0.33, ) 270.69 455.79 P
11 F
-0.15 (S) 306.65 455.79 P
13 F
-0.12 (0) 312.15 453.04 P
9 F
-0.15 ( = 20.0, ) 316.64 455.79 P
6 F
-0.16 (b) 352.6 455.79 P
9 F
-0.15 ( = 0.2, ) 359.19 455.79 P
6 F
-0.16 (g) 389.66 455.79 P
9 F
-0.15 ( = 0.71, ) 394.59 455.79 P
6 F
-0.16 (t) 430.55 455.79 P
9 F
-0.15 ( = 0.1, ) 435.82 455.79 P
6 F
-0.16 (c) 466.29 455.79 P
9 F
-0.15 ( = 0.5, ) 472.87 455.79 P
6 F
-0.16 (m) 503.34 455.79 P
9 F
(= 0.002, ) 114.25 442.79 T
6 F
(r) 153.4 442.79 T
9 F
( = 0.25, ) 159.99 442.79 T
6 F
(f) 196.4 442.79 T
9 F
( = 0.5.  Curves are averages of 10 runs.) 202.65 442.79 T
0 0 612 792 C
FMENDPAGE
%%EndPage: "11" 10
11 14 /Times-Roman FMDEFINEFONT
%%Page: "10" 10
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(10) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 243 540 486 R
V
1 F
0 X
(An experiment typically proceeded as follows.  The classi\336er population was randomly ini-) 90 478 T
(tialized and then * began executing \322problems\323, each consisting of being placed into a randomly ) 72 454 T
(chosen blank cell of W) 72 430 T
(oods1 and moving under control of the system until a food was eaten, at ) 181.62 430 T
(which point the food instantly re-grew and a new problem began.  This process was repeated for ) 72 406 T
(several thousand problems, with the measure of performance being a moving average over the ) 72 382 T
(previous 50 problems of the number of steps \050action selections\051 in each problem.  The technique ) 72 358 T
-0.22 (of random restarts with instant re-growing was used to avoid the complication of a non-stationary ) 72 334 P
(environment.  The bucket brigade was re-initialized \050[A]) 72 310 T
5 F
(-1) 343.78 307 T
1 F
( set to nil\051 at each restart since there ) 352.11 310 T
(was no learnable connection between problems.) 72 286 T
-0.21 (Curves typical of the best average results achieved by ZCS in W) 90 256 P
-0.21 (oods1 are shown in Figure 3.  ) 396.21 256 P
73.88 497.75 541.88 735 C
73.88 497.75 541.88 735 R
7 X
0 K
V
84.5 538.5 512.5 724.38 R
V
10 F
0 X
(.......................................................) 149.3 717.71 T
(.OOF..OOF..OOF..OOF..OOF..OOF..OOF..OOF..OOF..OOF..OOF.) 149.3 705.71 T
(.OOO..OOO..OOO..OOO..OOO..OOO..OOO..OOO..OOO..OOO..OOO.) 149.3 693.71 T
(.OOO..OOO..OOO..OOO..OOO..OOO..OOO..OOO..OOO..OOO..OOO.) 149.3 681.71 T
(.......................................................) 149.3 669.71 T
(.......................................................) 149.3 657.71 T
(.OOF..OOF..OOF..OOF..OOF..OOF..OOF..OOF..OOF..OOF..OOF.) 149.3 645.71 T
(.OOO..OOO..OOO..OOO..OOO..OOO..OOO..OOO..OOO..OOO..OOO.) 149.3 633.71 T
(.OOO..OOO..OOO..OOO..OOO..OOO..OOO..OOO..OOO..OOO..OOO.) 149.3 621.71 T
(.......................................................) 149.3 609.71 T
(.......................................................) 149.3 597.71 T
(.OOF..OOF..OOF..OOF..OOF..OOF..OOF..OOF..OOF..OOF..OOF.) 149.3 585.71 T
(.OOO..OOO..OOO..OOO..OOO..OOO..OOO..OOO..OOO..OOO..OOO.) 149.3 573.71 T
(.OOO..OOO..OOO..OOO..OOO..OOO..OOO..OOO..OOO..OOO..OOO.) 149.3 561.71 T
(.......................................................) 149.3 549.71 T
109.88 508.38 505.88 528.25 R
7 X
V
4 F
0 X
(Figure 2) 109.88 520.92 T
9 F
(.  Environment \322Woods1\323 with animat.   Empty cells are indicated by \322.\323) 149.24 520.92 T
11 F
(*) 262.67 630.33 T
0 0 612 792 C
72 81 540 243 R
7 X
0 K
V
1 F
0 X
(The dotted curve represents ZCS as described in Section 2, with parameter values as given in the ) 72 235 T
(\336gure caption.  The lower curve is for a slight extension of ZCS which will be examined in Sec-) 72 211 T
-0.24 (tion 4.  Both curves fall very rapidly from a lar) 72 187 P
-0.24 (ge initial number of time-steps per problem \050rough-) 294.2 187 P
(ly equal to the average number of time-steps to food for random moves from a random start, ) 72 163 T
(which is 27 in W) 72 139 T
(oods1\051 to about 4 steps, then descend gradually by another step or so.  For com-) 152.99 139 T
-0.21 (parison, the best that * could possibly do, if from every start she proceeded by the shortest path to ) 72 115 P
(the nearest food, would be 1.7 steps.  This is the absolute optimum since no more elaborately ) 72 91 T
FMENDPAGE
%%EndPage: "10" 9
%%Page: "9" 9
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(9) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
3 F
0 X
(3.   Performance in T) 72 710.67 T
(wo Envir) 197.65 710.67 T
(onments) 252.21 710.67 T
1 F
-0.48 (ZCS represents a simpli\336cation of the original classifer system framework in several respects.  ) 90 684 P
(First, elements of the canonical framework, such as the message list, bid competition, and speci-) 72 660 T
-0.41 (\336city dependence in bids and payments, were eliminated from the start in order to focus on a more ) 72 636 P
-0.52 (understandable\321albeit perhaps in principle less powerful\321system.  Second, a considerable ef) 72 612 P
-0.52 (fort ) 520.21 612 P
-0.16 (was made to minimize the number of remaining mechanisms while still getting reasonable perfor-) 72 588 P
-0.26 (mance in two test environments.  Many plausible mechanisms were experimented with, including ) 72 564 P
(explicit generalization pressures, partial matching of conditions against inputs, random classi\336er ) 72 540 T
(injection, and various taxations.  Our experiments were not exhaustive, but it appeared that none ) 72 516 T
(of these produced improvements \050if any\051 which justi\336ed including them.  Conversely) 72 492 T
(, the mecha-) 479.62 492 T
-0.33 (nisms that are included in ZCS appear to be necessary) 72 468 P
-0.33 (, or) 327.73 468 P
-0.33 (, more precisely) 342.91 468 P
-0.33 (, the functions they serve ) 418.4 468 P
(in the system should be present one way or another or there will be a loss of performance in the ) 72 444 T
(two environments we have studied.  In Section 5 we suggest extensions for more complicated en-) 72 420 T
(vironments.) 72 396 T
(The \336rst test environment, W) 90 366 T
(oods1, is a 2-dimensional rectilinear grid containing a single ) 229.95 366 T
(con\336guration of objects that is repeated inde\336nitely in the horizontal and vertical directions \050Fig-) 72 342 T
-0.19 (ure 2\051.  The objects are of two types, \322food\323, with sensor code 1) 72 318 P
-0.19 (1, and \322rock\323 with code 10; blank ) 376.14 318 P
(cells have code 00.  The classi\336er system, here regarded as an animat \050W) 72 294 T
(ilson 1985\051 or arti\336cial ) 422.23 294 T
(animal, is represented by *.  T) 72 270 T
(o sense its environment, * is capable of detecting the sensor codes ) 216.39 270 T
-0.15 (of the objects occupying the eight nearest cells \050sensing 00 if a cell is blank\051.  For example, in the ) 72 246 P
-0.11 (position shown, *\325) 72 222 P
-0.11 (s detector input is the 16-bit string 000000000010101) 160.08 222 P
-0.11 (1.  The left-hand two bits ) 416.4 222 P
-0.17 (are always those due to the object occupying the cell directly north of *, with the remainder corre-) 72 198 P
(sponding to cells proceeding clockwise around her) 72 174 T
(.  *\325) 314.49 174 T
(s available actions consist of the eight one-) 332.82 174 T
-0.03 (step moves into adjacent cells.  If a cell is blank, * simply moves there.  If the cell is occupied by ) 72 150 P
(a rock, the move is not permitted to take place, though one time-step still elapses.  If the cell con-) 72 126 T
(tains food, * moves to the cell, \322eats\323 the food, and receives a reward \050) 72 102 T
2 F
(r) 411.39 102 T
7 F
(imm) 416.05 99 T
1 F
( = 1000\051.) 433.27 102 T
FMENDPAGE
%%EndPage: "9" 8
%%Page: "8" 8
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(8) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 121.38 540 720 R
V
1 F
0 X
-0.27 (on knowledge already in the population, as does the GA.  However) 72 712 P
-0.27 (, the empty [M] condition is in-) 390.68 712 P
-0.12 (evitable in most systems, and something must be done when it occurs.  Rather than merely acting ) 72 688 P
(randomly) 72 664 T
(, covering allows the system to act randomly but test a hypothesis \050the condition-action ) 117.19 664 T
(relation expressed by the created classi\336er\051 at the same time.  ) 72 640 T
(The foregoing description of ZCS has mentioned most of the system\325) 90 610 T
(s parameters.  They are ) 421.8 610 T
(all summarized below) 72 586 T
(.) 177.15 586 T
2 F
(N) 90 556 T
1 F
(Population size.) 126 556 T
2 F
(P) 90 526 T
5 F
(#) 97.33 523 T
1 F
(Probability of a # at an allele position in the condition of ) 126 526 T
(a classi\336er created through ) 400.51 526 T
(covering, and in the conditions of ) 126 502 T
(classi\336ers in the initial randomly generated popula-) 290.23 502 T
(tion.) 126 478 T
2 F
(S) 90 448 T
7 F
(0) 96 445 T
1 F
(Strength assigned to each classi\336er in the initial population.) 126 448 T
6 F
(b) 90 418 T
1 F
(Learning rate for strength updates under the bucket brigade.) 126 418 T
6 F
(g) 90 388 T
1 F
(Discount factor for the bucket brigade.) 126 388 T
6 F
(t) 90 358 T
1 F
(Fraction of strength deducted from classi\336ers in [M] - [A].) 126 358 T
6 F
(c) 90 328 T
1 F
(Probability of crossover per invocation of the GA.) 126 328 T
6 F
(m) 90 298 T
1 F
(Probability of mutation per allele in an of) 126 298 T
(fspring.  Mutation takes ) 324.66 298 T
(0,1,# equiprobably ) 442.25 298 T
(into one of the other allowed alleles.) 126 274 T
6 F
(r) 90 244 T
1 F
-0.02 (A) 126 244 P
-0.02 (verage number of new classi\336ers generated by the GA per time-step ) 133.77 244 P
-0.02 (of the perfor-) 462.97 244 P
(mance cycle.) 126 220 T
6 F
(f) 90 190 T
1 F
( If the total strength of [M] is less than ) 126 190 T
6 F
(f) 313.88 190 T
1 F
( times the mean strength ) 320.12 190 T
(of [P], covering oc-) 440.38 190 T
(curs.) 126 166 T
FMENDPAGE
%%EndPage: "8" 7
%%Page: "7" 7
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(7) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
1 F
0 X
(tion of the apparent best increasingly displaces exploration. However) 72 712 T
(, there are better techniques ) 403.61 712 T
(for approaching the explore/exploit tradeof) 72 688 T
(f, one of which will be proposed in Section 5.2. The ) 278.29 688 T
(system\325) 72 664 T
(s exploration tendency is more properly handled in the performance, not the reinforce-) 108.65 664 T
(ment, cycle, and the ) 72 640 T
6 F
(t) 171.26 640 T
1 F
( technique should be regarded as provisional.) 176.52 640 T
-0.2 (The ) 90 610 P
2 F
-0.2 (discovery) 111.45 610 P
1 F
-0.2 (, or classi\336er generating, component of ZCS consists of a basic panmictic genet-) 156.63 610 P
-0.09 (ic algorithm supplemented by a covering operation. The GA operates in the background, at an av-) 72 586 P
-0.13 (erage rate keyed to the performance cycle.  Each time it is invoked, the GA selects two classi\336ers ) 72 562 P
(based on strength, copies them to form of) 72 538 T
(fspring, crosses and/or mutates the of) 270.98 538 T
(fspring with \336xed ) 449.97 538 T
-0.39 (probabilities, then inserts the of) 72 514 P
-0.39 (fspring into the population.  T) 221.79 514 P
-0.39 (o maintain [P] at a constant size, two ) 362.92 514 P
(classi\336ers are deleted with probability proportional to the inverse of their strengths.  The initial ) 72 490 T
(strengths of of) 72 466 T
(fspring classi\336ers are set so as to conserve the total strength of parents and of) 141.07 466 T
(f-) 511.25 466 T
(spring.  Half of each parent\325) 72 442 T
(s strength is deducted from the parent and assigned to its copy) 206.55 442 T
(.  If ) 503.91 442 T
(crossover occurs, the copy strengths are reset to their mean.  The rate of GA invocation is prob-) 72 418 T
-0.21 (lem-dependent.  On the average, classi\336ers should be evaluated \050be in some [A]\051 a suf) 72 394 P
-0.21 (\336cient num-) 481.9 394 P
-0.17 (ber of times before being selected, in order that their strengths settle to values which approximate ) 72 370 P
(steady-state values.  If the GA is run too fast, strengths will on average be too noisy; if run too ) 72 346 T
-0.33 (slowly) 72 322 P
-0.33 (, the system will not achieve its best rate of improvement. In ZCS, the GA rate is controlled ) 103.21 322 P
(by a probability of invocation per time-step, which must be chosen by the user) 72 298 T
(.  T) 447.75 298 T
(echniques for ) 463.24 298 T
-0.03 (automatic rate control are known \050Booker 1982\051, based on each classi\336er) 72 274 P
-0.03 (\325) 422.9 274 P
-0.03 (s keeping a count of its ) 426.23 274 P
(evaluations.) 72 250 T
-0.39 (The covering operation deals with the situation occurring when [M] is empty) 90 220 P
-0.39 (, i.e., no classi\336er ) 454.3 220 P
(in [P] matches the input, or when the total strength in [M], ) 72 196 T
2 F
(S) 355.15 196 T
5 F
([M]) 361.15 193 T
1 F
(, is less than a fraction ) 376.69 196 T
6 F
(f) 486.95 196 T
1 F
( of the ) 493.19 196 T
(population mean strength.  Covering creates a new classi\336er whose condition matches the input ) 72 172 T
(and contains a probabilistically determined number of #\325) 72 148 T
(s. The classi\336er) 343.48 148 T
(\325) 418.87 148 T
(s action is chosen ran-) 422.21 148 T
-0.38 (domly) 72 124 P
-0.38 (, and the strength is set to the population average.  The new classi\336er is inserted into [P] and ) 101.88 124 P
(a classi\336er is deleted as in the GA.  Then the system forms a new [M] and proceeds as usual.  ) 72 100 T
(Covering is a relatively crude operation resembling rote learning or imprinting; it does not build ) 72 76 T
FMENDPAGE
%%EndPage: "7" 6
%%Page: "6" 6
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(6) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
1 F
0 X
(which ) 72 712 T
2 F
(follows) 104.31 712 T
1 F
( [A] in time.  Then the process can be written as a re-assignment) 138.97 712 T
5 F
(\0501\051) 528.35 680.8 T
1 F
(This expression can be seen to parallel Holland\325) 72 646 T
(s bucket brigade, with three main exceptions: ) 302.17 646 T
(classi\336er speci\336cities are ignored; there is no \322bid competition\323; and the quantity passed by the ) 72 622 T
(\322brigade\323 is reduced by a factor 1-) 72 598 T
6 F
(g ) 237.85 598 T
1 F
(at each step.  ZCS ignores speci\336cities on the basis of earlier ) 245.77 598 T
(experiments \050W) 72 574 T
(ilson 1988\051 indicating that their presence in classi\336er \322payments\323\321the amounts ) 148.46 574 T
(transferred between classi\336ers\321is undesirable.  Other experiments reported in that study found ) 72 550 T
(no advantage for the bid competition \050in which, in ef) 72 526 T
(fect, the action is selected from among the ) 324.94 526 T
-0.13 (classi\336ers in a high-strength subset of [M]\051.  In contrast, a discount factor ) 72 502 P
6 F
-0.13 (g) 425.66 502 P
1 F
-0.13 ( signi\336cantly less than ) 430.59 502 P
-0.13 (1.0 appears to be essential in \0501\051 for problems of the kind studied here.  W) 72 478 P
-0.13 (e found that if ) 425.22 478 P
6 F
-0.13 (g) 495.34 478 P
1 F
-0.13 ( is omit-) 500.27 478 P
(ted or set near 1.0,  then dithering, lack of ur) 72 454 T
(gency in attaining rewards, and looping behavior oc-) 285.29 454 T
(cur which smaller values of the discount factor greatly reduce.) 72 430 T
(The sharing of the reward and the bucket amount in the second and third reinforcement steps ) 90 400 T
(prevents the genetic algorithm from allocating excessive numbers of classi\336ers to any given re-) 72 376 T
-0.21 (warding \322niche\323; for an analysis see the appendix to W) 72 352 P
-0.21 (ilson \0501987a\051.  Note also, in contrast to the ) 334.39 352 P
(canonical framework, that the \322payments\323 in ZCS\325) 72 328 T
(s bucket brigade do not pass via the intermedi-) 315.49 328 T
-0.15 (ary of posted messages, since there is no message list.  Instead, the payments go to the previously ) 72 304 P
-0.29 (active classi\336ers as though each posted the same message, and that message was matched by each ) 72 280 P
(of the presently active classi\336ers.  This technique, \336rst used in W) 72 256 T
(ilson \0501985\051, was termed in ) 384.31 256 T
(Goldber) 72 232 T
(g \0501989\051 an ) 111.09 232 T
2 F
(implicit bucket brigade) 169.37 232 T
1 F
(.) 280.64 232 T
-0.15 (The reinforcement cycle has one further step in which the strengths of classi\336ers in the ) 90 202 P
2 F
-0.15 (set dif-) 507.16 202 P
(fer) 72 178 T
(ence) 84.88 178 T
1 F
( [M] - [A] are reduced by a small fraction ) 106.85 178 T
6 F
(t) 309.34 178 T
1 F
( ) 314.6 178 T
6 F
(@) 317.6 178 T
1 F
( ) 324.18 178 T
6 F
(b) 327.18 178 T
1 F
(.  That is, matching classi\336ers which advo-) 333.77 178 T
(cate actions ) 72 154 T
2 F
(other) 131.28 154 T
1 F
( than the selected action are weakened.  This causes the system, over many ) 156.6 154 T
(cycles, to become increasingly de\336nite about its action choices in the situations it encounters.  In ) 72 130 T
(ef) 72 106 T
(fect, the use of the \322tax\323 ) 81.1 106 T
6 F
(t) 200.66 106 T
1 F
( combined with roulette wheel action selection represents an explora-) 205.93 106 T
(tion strategy in which selected actions become increasingly likely to be selected, so that exploita-) 72 82 T
193.04 670 407.31 690 C
2 F
0 X
0 K
(S) 191.82 680.8 T
5 F
(A) 204.24 676.35 T
8 F
([) 199.95 676.35 T
(]) 211.92 676.35 T
2 F
(S) 234.75 680.8 T
5 F
(A) 247.17 676.35 T
8 F
([) 242.88 676.35 T
(]) 254.85 676.35 T
6 F
(b) 272.43 680.8 T
2 F
(S) 279.72 680.8 T
5 F
(A) 292.14 676.35 T
8 F
([) 287.84 676.35 T
(]) 299.82 676.35 T
6 F
(-) 262.84 680.8 T
(b) 317.39 680.8 T
2 F
(r) 324.68 680.8 T
7 F
(i) 329.81 676.33 T
(m) 333.18 676.33 T
(m) 340.98 676.33 T
6 F
(b) 360.78 680.8 T
(g) 368.07 680.8 T
2 F
(S) 373.71 680.8 T
5 F
(A) 386.13 676.35 T
8 F
([) 381.83 676.35 T
(]) 393.81 676.35 T
(\242) 399.39 676.35 T
6 F
(+) 307.81 680.8 T
(+) 351.2 680.8 T
(\254) 219.91 680.8 T
0 0 612 792 C
FMENDPAGE
%%EndPage: "6" 5
%%Page: "5" 5
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(5) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 126 540 720 R
V
1 F
0 X
(stochastic method: a roulette wheel with sectors sized according to the strengths of members of ) 72 712 T
-0.37 ([M].  Thus a particular action ) 72 688 P
2 F
-0.37 (a) 214.02 688 P
1 F
-0.37 ( is selected with probability equal to the sum of the strengths of the ) 220.01 688 P
(classi\336ers in [M] which advocate that action, divided by the total strength of classi\336ers in [M].  ) 72 664 T
-0.24 (Next, an ) 72 640 P
2 F
-0.24 (action) 115.15 640 P
1 F
-0.24 ( ) 145.13 640 P
2 F
-0.24 (set) 147.89 640 P
1 F
-0.24 ( [A] is formed, consisting of all members of [M] which advocated ) 161.22 640 P
2 F
-0.24 (a) 477.77 640 P
1 F
-0.24 (.  Finally) 483.76 640 P
-0.24 (, ) 525.49 640 P
2 F
-0.24 (a) 531.24 640 P
1 F
-0.24 ( ) 537.24 640 P
(is sent to the ef) 72 616 T
(fector interface, and the corresponding motor action is carried out in the environ-) 144.4 616 T
(ment.) 72 592 T
-0.31 (ZCS\325) 90 562 P
-0.31 (s generalization capability is expressed in the action set [A].  In the \336rst place, individual ) 115.33 562 P
-0.42 (classi\336ers of [A] may have #\325) 72 538 P
-0.42 (s in their conditions, so they match more than one distinct input.  But ) 211.44 538 P
(second, the conditions present are generally dif) 72 514 T
(ferent: there may be dif) 297.94 514 T
(ferent numbers of #\325) 410.3 514 T
(s, or ) 507.89 514 T
-0.2 (the speci\336ed bits may be in dif) 72 490 P
-0.2 (ferent positions.  This diversity re\337ects ZCS\325) 217.8 490 P
-0.2 (s search for the \322best\323 ) 432.12 490 P
-0.4 (classi\336ers in each situation; these are in general classi\336ers which have high relative strength while ) 72 466 P
(matching a lar) 72 442 T
(ge number of inputs.  There appears to be an inherent pressure in ZCS and similar ) 140.4 442 T
(classi\336er systems toward such classi\336ers \050W) 72 418 T
(ilson 1987a\051.) 285.04 418 T
(ZCS\325) 90 388 T
(s ) 115.33 388 T
2 F
(r) 122.99 388 T
(einfor) 127.22 388 T
(cement) 155.42 388 T
1 F
(, or credit assignment, cycle centers around [A] and the action set on the ) 189.39 388 T
(previous time-step, [A]) 72 364 T
5 F
(-1) 183.59 361 T
1 F
(.  The procedure goes as follows. First a \336xed fraction ) 191.91 364 T
6 F
(b) 454.05 364 T
1 F
( \0500 ) 460.64 364 T
6 F
(<) 476.62 364 T
1 F
( ) 483.21 364 T
6 F
(b) 486.21 364 T
1 F
( ) 492.79 364 T
6 F
(\243) 495.79 364 T
1 F
( 1\051 of ) 502.37 364 T
(the strength of each member of [A] is deducted from the member) 72 340 T
(\325) 385.2 340 T
(s strength and placed in an \050ini-) 388.53 340 T
(tially empty\051 common \322bucket\323 B.  If ) 72 316 T
2 F
(S) 255.21 316 T
5 F
([A]) 261.21 313 T
1 F
( is the total strength of members of [A], the ef) 275.08 316 T
(fect is to ) 495.04 316 T
-0.2 (deduct ) 72 292 P
6 F
-0.2 (b) 106.78 292 P
2 F
-0.2 (S) 113.36 292 P
5 F
-0.16 ([A]) 119.36 289 P
1 F
-0.2 ( from) 133.23 292 P
2 F
-0.2 ( S) 159.35 292 P
5 F
-0.16 ([A] ) 168.15 289 P
1 F
-0.2 (and place it in the bucket.  Second, if the system receives an immediate re-) 184.35 292 P
-0.4 (ward ) 72 268 P
2 F
-0.4 (r) 98.57 268 P
7 F
-0.34 (imm) 103.24 265 P
1 F
-0.4 ( from the environment after taking action ) 120.45 268 P
2 F
-0.4 (a) 318.48 268 P
1 F
-0.4 (, a quantity ) 324.48 268 P
6 F
-0.4 (b) 379.9 268 P
2 F
-0.4 (r) 386.49 268 P
7 F
-0.34 (imm) 391.15 265 P
1 F
-0.4 (/|A| is added to the strength ) 408.36 268 P
(of each classi\336er in [A] \050|A| is the number of classi\336ers in [A]\051.  The ef) 72 244 T
(fect is to increase ) 412.31 244 T
2 F
(S) 498.9 244 T
5 F
([A]) 504.9 241 T
1 F
( by ) 518.77 244 T
6 F
-0.26 (b) 72 220 P
2 F
-0.26 (r) 78.58 220 P
7 F
-0.22 (imm) 83.25 217 P
1 F
-0.26 (.  Third, classi\336ers in [A]) 100.46 220 P
5 F
-0.22 (-1) 220.06 217 P
1 F
-0.26 ( \050if it is non-empty\051 have their strengths incremented by ) 228.38 220 P
6 F
-0.26 (g) 496.89 220 P
2 F
-0.26 (B) 501.82 220 P
1 F
-0.26 (/|A) 509.15 220 P
5 F
-0.22 (-1) 523.54 217 P
1 F
-0.26 (|, ) 531.87 220 P
(where) 72 196 T
6 F
( g) 101.3 196 T
1 F
( is a discount factor \0500 ) 109.23 196 T
6 F
(<) 219.15 196 T
1 F
( ) 225.73 196 T
6 F
(g) 228.73 196 T
1 F
( ) 233.66 196 T
6 F
(\243) 236.66 196 T
1 F
( 1\051,) 243.24 196 T
2 F
( B) 259.23 196 T
1 F
( is the total amount put in the bucket in step 1, and |A) 269.55 196 T
5 F
(-1) 525.81 193 T
1 F
(| ) 534.13 196 T
(is the number of classi\336ers in [A]) 72 172 T
5 F
(-1) 232.56 169 T
1 F
(.  Finally) 240.88 172 T
(, [A] replaces [A]) 283.09 172 T
5 F
(-1) 367.66 169 T
1 F
( and the bucket is emptied.  ) 375.99 172 T
(T) 90 142 T
(o see the overall ef) 96.49 142 T
(fect of this process on ) 186.86 142 T
2 F
(S) 295.11 142 T
5 F
([A]) 301.11 139 T
1 F
(, it is helpful to de\336ne [A]' as the action set ) 314.98 142 T
FMENDPAGE
%%EndPage: "5" 4
6 36 /Times-Roman FMDEFINEFONT
8 10 /Helvetica FMDEFINEFONT
10 8 /Times-Roman FMDEFINEFONT
%%Page: "4" 4
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(4) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 396 R
V
1 F
0 X
(being regarded either as computing the presence or absence of input features, or as thresholding ) 72 388 T
-0.13 (analog input variables\321 the canonical framework makes the same assumption.  While this \336ness-) 72 364 P
(es the problem of learning the features or thresholds in the \336rst place, ZCS still has to learn ef) 72 340 T
(fec-) 521.14 340 T
(tive classi\336er conditions, that is, feature-like combinations of detector output bits.  The use of ) 72 316 T
-0.11 (discrete actions is also a simpli\336cation, since many creature actions range over a continuum, e.g., ) 72 292 P
(turn a little bit left.  Classi\336er systems will ultimately need to deal with both continuous inputs ) 72 268 T
(and outputs; research in fuzzy classi\336er systems \050V) 72 244 T
(alenzuela-Rend\227n 1991, Parodi & Bonelli ) 316.82 244 T
(1993\051 is one step in that direction.) 72 220 T
(In the ) 90 190 T
2 F
(performance) 120.64 190 T
1 F
(, or sense-act, cycle of ZCS, the condition of each classi\336er in [P] is com-) 181.93 190 T
-0.28 (pared with the detector string.  If the bit at every non-# position in a classi\336er) 72 166 P
-0.28 (\325) 439.25 166 P
-0.28 (s condition matches ) 442.58 166 P
(the corresponding bit in the detector string, the condition is satis\336ed and the classi\336er becomes a ) 72 142 T
-0.2 (member of the current ) 72 118 P
2 F
-0.2 (match set) 181.1 118 P
1 F
-0.2 ( [M].  Next, an action is selected from among those advocated by ) 226.53 118 P
(members of [M].  Many schemes are possible and useful, but ZCS employs perhaps the simplest ) 72 94 T
72 423 540 720 C
72 423 540 720 R
7 X
0 K
V
6 F
0 X
( ) 305.15 522.32 T
156.65 697.5 480.65 711 R
7 X
V
0.5 H
2 Z
0 X
N
2 F
(Env) 308.78 699.9 T
(.) 326.54 699.9 T
183.57 668.75 249.82 679.17 R
7 X
V
0 X
N
176.49 507.92 257.32 635 9 RR
7 X
V
0 X
N
278.57 532.5 351.98 602.5 R
7 X
V
0 X
N
392.32 547.08 464.4 587.92 R
7 X
V
0 X
N
374.82 473.75 446.9 514.58 R
7 X
V
8 X
N
392.73 669.58 458.98 680 R
7 X
V
0 X
N
8 F
(001) 204.1 701.01 T
(1) 220.03 701.01 T
(#01) 184.82 603.12 T
(1 : 01     43) 200.75 603.12 T
(1) 184.82 591.31 T
(1## : 00     32) 189.63 591.31 T
(#0## : 1) 184.82 579.5 T
(1     14) 220.2 579.5 T
(001# : 01     27) 184.82 567.68 T
(#0#1 : 1) 184.82 555.87 T
(1     18) 220.2 555.87 T
(#01) 284.65 582.87 T
(1 : 01    43) 300.58 582.87 T
(#0## : 1) 284.82 572.62 T
(1    14) 320.2 572.62 T
(001# : 01    27) 284.82 561.96 T
(#0#1 : 1) 285.23 551.29 T
(1    18) 320.62 551.29 T
(1#01 : 10     24) 185.24 545.21 T
(\245) 214.82 533.96 T
(\245) 214.82 524.96 T
(\245) 214.82 515.96 T
(#01) 395.73 573.04 T
(1 : 01    43) 411.67 573.04 T
(001# : 01    27) 395.57 561.54 T
(01) 446.07 626.87 T
5 F
0.4 (Detectors) 193.9 671.16 S
0.4 (Ef) 407.07 672.33 S
0.4 (fectors) 417.12 672.33 S
0 F
0.8 (Classi\336ers) 184.82 620.43 S
5 F
0.4 (Match Set) 280.65 619.16 S
0.4 ([M]) 281.15 608.66 S
0.4 (Action Set) 392.82 602.91 S
0.4 ([A]) 392.82 593.41 S
(Previous) 385.23 499.16 T
(  Action Set) 385.23 490.16 T
([A]) 377.23 520.82 T
10 F
0.32 (-1) 391.11 518.32 S
5 F
(GA,) 138.15 535.26 T
(Covering) 129.49 524.58 T
7 F
0.4 (\322left\323) 410.15 686.6 S
0.4 (match) 223.15 648.68 S
0.4 (action) 355.73 577.52 S
0.1 (selection) 354.73 557.18 S
10 F
0.32 (\050Reward\051) 464.4 607.96 S
0.32 (Internal) 435.73 534.37 S
0.32 (Reinforcement) 428.73 524.87 S
5 F
([P]) 180.15 638.91 T
193.58 687.78 191.1 679.12 188.62 687.78 191.1 687.78 4 Y
V
191.1 697.62 191.1 687.54 2 L
N
239.08 688.28 236.6 679.62 234.12 688.28 236.6 688.28 4 Y
V
236.6 697.62 236.6 688.04 2 L
N
400.61 688.97 403.1 697.62 405.58 688.97 403.1 688.97 4 Y
V
403.1 680.12 403.1 689.21 2 L
N
444.11 688.97 446.6 697.62 449.08 688.97 446.6 688.97 4 Y
V
446.6 680.12 446.6 689.21 2 L
N
440.61 660.97 443.1 669.62 445.58 660.97 443.1 660.97 4 Y
V
443.1 588.12 443.1 661.21 2 L
N
472.1 697.62 472.1 601.12 2 L
N
471.41 594.04 465.1 587.62 467.05 596.41 469.23 595.22 4 Y
V
472.1 600.62 469.11 595.01 2 L
N
272.41 577.31 278.6 571.12 272.41 564.94 272.41 571.12 4 Y
8 X
V
257.6 571.12 272.65 571.12 2 L
3 H
N
385.91 576.31 392.1 570.12 385.91 563.94 385.91 570.12 4 Y
V
354.6 570.12 386.15 570.12 2 L
N
220.78 641.81 214.6 635.62 208.41 641.81 214.6 641.81 4 Y
V
214.6 667.62 214.6 641.57 2 L
N
418.38 519.9 411.08 514.63 414.48 522.96 416.43 521.43 4 Y
0 X
V
436.1 546.62 416.3 521.23 2 L
0.5 H
N
182 540.4 191.6 536.12 182 531.85 182 536.12 4 Y
3 X
V
160.1 536.12 182.24 536.12 2 L
3 H
N
0.5 H
0 X
90 450 21.38 17.33 147.38 530.62 A
108 432 504 450 R
7 X
V
4 F
0 X
(Figure 1) 108 442.67 T
9 F
(.  Schematic illustration of ZCS.) 147.36 442.67 T
0 0 612 792 C
FMENDPAGE
%%EndPage: "4" 3
%%Page: "3" 3
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(3) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
1 F
0 X
(of ) 72 712 T
9 F
(ZCS) 84.99 712 T
1 F
( suf) 105.14 712 T
(\336cient to allow implementation. Section 3 gives results in two experimental environ-) 122.58 712 T
-0.14 (ments.  In Section 4, the relationship of ZCS to the technique called Q-learning is discussed.  Sec-) 72 688 P
(tion 5 suggests extensions to ZCS, including: simple temporary memory; more sophisticated ) 72 664 T
-0.05 (action selection; a niche genetic algorithm; and a general representation for classi\336er conditions.  ) 72 640 P
(Section 6 concludes by summarizing advantages of ZCS as a reinforcement learner) 72 616 T
(, and, with re-) 470.22 616 T
(spect to Holland\325) 72 592 T
(s full framework, notes the price in elements given short shrift.) 153.95 592 T
3 F
(2.   Description of ZCS) 72 556.67 T
1 F
-0.15 (Figure 1 gives a broad picture of ZCS.  The system is seen in interaction with an environment ) 90 530 P
(via detectors for sensory input and ef) 72 506 T
(fectors for motor actions.  In addition, the environment at ) 249.65 506 T
(times provides a scalar reinforcement, here termed reward.  The basic idea of a system sensing ) 72 482 T
-0.12 (and learning to act in an environment so as to gain reward appeared early in Holland\325) 72 458 P
-0.12 (s work \050Hol-) 478.95 458 P
(land 1976\051.  It has more recently become known as the reinforcement learning problem, and en-) 72 434 T
(compasses many aspects of the general problem of intelligence \050Sutton 1992\051.  ZCS descends ) 72 410 T
-0.17 (from the classi\336er system developed in W) 72 386 P
-0.17 (ilson \0501985\051 but dif) 272.38 386 P
-0.17 (fers signi\336cantly in omitting several ) 364.61 386 P
(heuristics and operators that aided that system.  These included: a look-ahead classi\336er creation ) 72 362 T
-0.02 (heuristic, a statistic estimating distance to reward kept by each classi\336er and used in the perfor-) 72 338 P
(mance cycle and elsewhere, and a genetic interference operator) 72 314 T
(.) 374.71 314 T
-0.06 (W) 90 284 P
-0.06 (ithin Figure 1, the box labeled [P] \050\322population\323\051 contains the system\325) 100.84 284 P
-0.06 (s current set of classi-) 435.67 284 P
(\336ers.  They are built on the binary alphabet, plus the don\325) 72 260 T
(t care symbol #; a colon separates the ) 347.26 260 T
(condition and action.  The condition, in this example of length four) 72 236 T
(, is a single conjunct to be ) 393.65 236 T
-0.24 (matched against the indicated detector bits; the action part encodes a motor action.  Shown associ-) 72 212 P
(ated with each classi\336er is a scalar strength.  As is apparent, and unlike Holland\325) 72 188 T
(s framework, ) 457.72 188 T
-0.14 (ZCS has no internal message list.  It is thus incapable of temporary memory) 72 164 P
-0.14 (, and so cannot act on ) 433.89 164 P
-0.22 (accumulated information detected on any previous time-step, or according to internally generated ) 72 140 P
(intentions or controls.  ) 72 116 T
(The use of binary detector variables is a restriction in the interest of simplicity) 90 86 T
(, the detectors ) 464.63 86 T
FMENDPAGE
%%EndPage: "3" 2
%%Page: "2" 2
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(2) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
3 F
0 X
(1. Intr) 72 710.67 T
(oduction) 109.83 710.67 T
1 F
-0.19 (A ) 90 684 P
2 F
-0.19 (classi\336er system) 101.47 684 P
1 F
-0.19 ( is a learning system in which a set of  condition-action rules called classi\336-) 179.56 684 P
(ers compete to control the system and gain credit based on the system\325) 72 660 T
(s receipt of reinforcement ) 409.77 660 T
(from the environment.  A classi\336er) 72 636 T
(\325) 240.33 636 T
(s cumulative credit, termed ) 243.66 636 T
(strength) 377.23 636 T
(, determines its in\337uence ) 415.88 636 T
-0.2 (in the control competition and in an evolutionary process using a genetic algorithm in which new) 72 612 P
-0.2 (, ) 534.21 612 P
(plausibly better) 72 588 T
(, classi\336ers are generated from strong existing ones, and weak classi\336ers are dis-) 145.81 588 T
(carded. The original classi\336er system concept is due to Holland, who described it most complete-) 72 564 T
(ly in Holland \0501986\051.  Responding to perceived shortcomings of existing arti\336cial intelligence ) 72 540 T
-0.16 (systems, particularly with regard to adaptation and practical induction, Holland laid out a compet-) 72 516 P
-0.29 (itive/cooperative message-passing framework addressing desiderata including: temporal credit as-) 72 492 P
(signment under conditions of sparse or delayed reinforcement; distributed and generalizable ) 72 468 T
-0.18 (representations of complex categories; default responses subject to exceptions; and graceful adap-) 72 444 P
-0.46 (tation of system knowledge through gradual con\336rmation/discon\336rmation of hypotheses.  Though ) 72 420 P
(a number of researchers were inspired by Holland\325) 72 396 T
(s framework to investigate classi\336er systems ) 314.8 396 T
(\050for a review) 72 372 T
(, see W) 133.15 372 T
(ilson & Goldber) 168.31 372 T
(g 1989\051 and it also had some in\337uence on the related \336eld of ) 246.05 372 T
(reinforcement learning \050Barto 1992\051, ef) 72 348 T
(forts to realize the framework\325) 261.29 348 T
(s potential have met with ) 407.17 348 T
(mixed success, primarily due to dif) 72 324 T
(\336culty understanding the many interactions of the classi\336er ) 240.34 324 T
-0.12 (system mechanisms that Holland outlined.  The most successful studies tended in fact to simplify ) 72 300 P
(and reduce the canonical framework, permitting better understanding of the mechanisms which ) 72 276 T
(remained.) 72 252 T
(Recently we set out to carry this simpli\336cation to the point where all remaining processes ) 90 222 T
(might be well understood, while retaining what we deemed to be the essence of the classi\336er sys-) 72 198 T
(tem idea: a system capable of action through time to obtain external reinforcement, based on an ) 72 174 T
(evolving set of internally reinforced, generalizable condition-action rules. The result, a sort of ) 72 150 T
-0.05 (\322zeroth-level\323 classi\336er system, ZCS, has points of analytical contact with systems studied under ) 72 126 P
(the heading of reinforcement learning, and appears to provide a viable foundation for building to-) 72 102 T
(ward the aims of Holland\325) 72 78 T
(s full framework.  The next section of this paper presents a description ) 197.25 78 T
FMENDPAGE
%%EndPage: "2" 1
4 18 /Times-Bold FMDEFINEFONT
%%Page: "1" 1
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(1) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
4 F
0 X
(ZCS:   A Zer) 152.51 628 T
(oth Level Classi\336er System) 252.12 628 T
1 F
(Stewart W) 260.99 568 T
(. W) 310.85 568 T
(ilson) 327.68 568 T
(The Rowland Institute for Science) 223.73 554 T
(100 Edwin H. Land Blvd.) 244.04 540 T
(Cambridge, MA  02142) 248.7 526 T
(\050617\051 497-4650) 268.53 512 T
(wilson@smith.rowland.or) 240.62 498 T
(g) 365.39 498 T
(Submitted to ) 188.22 464 T
2 F
(Evolutionary Computation, ) 252.86 464 T
1 F
(8/17/93) 387.13 464 T
(Revised 2/16/94) 266.85 450 T
(To appear in Vol. 2, No. 1, pp. 1-18) 219.89 436 T
3 F
(Abstract) 279.97 381.67 T
1 F
(A basic classi\336er system, ZCS, is presented which keeps much of Holland\325) 108 357 T
(s origi-) 467.43 357 T
(nal framework but simpli\336es it to increase understandability and performance. ) 108 333 T
(ZCS\325) 108 309 T
(s relation to Q-learning is brought out, and their performances compared in ) 133.33 309 T
(environments of two dif) 108 285 T
(\336culty levels.  Extensions to ZCS are proposed for tempo-) 223.38 285 T
(rary memory) 108 261 T
(, better action selection, more ef) 169.5 261 T
(\336cient use of the genetic algorithm, ) 323.5 261 T
(and more general classi\336er representation.) 108 237 T
3 F
(Key words) 273.94 191.67 T
1 F
-0.28 (Classi\336er systems, Q-learning, temporary memory) 108 167 P
-0.28 (, action selection, restricted mat-) 348.59 167 P
(ing, s-classi\336ers, genetic programming) 108 143 T
288 738 324 765 R
7 X
V
FMENDPAGE
%%EndPage: "1" 0
%%Trailer
%%BoundingBox: 0 0 612 792
%%Pages: 30 -1
%%DocumentFonts: Times-Bold
%%+ Times-Roman
%%+ Times-Italic
%%+ Courier
%%+ Symbol
%%+ Helvetica
